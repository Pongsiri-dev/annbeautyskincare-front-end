{"ast":null,"code":"var _jsxFileName = \"/Users/pongsiri.an/Downloads/Theme/Minimal_TypeScript_v2.7.0/full_version_TS/src/sections/@dashboard/chat/ChatRoomGroupParticipant.tsx\";\n// @mui\nimport { styled } from '@mui/material/styles';\nimport { Box, List, Avatar, Button, Collapse, ListItemText, ListItemAvatar, ListItemButton } from '@mui/material'; // @types\n\n// components\nimport Iconify from '../../../components/Iconify';\nimport Scrollbar from '../../../components/Scrollbar';\nimport BadgeStatus from '../../../components/BadgeStatus'; //\n\nimport ChatRoomPopup from './ChatRoomPopup'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst HEIGHT = 64;\nconst CollapseButtonStyle = styled(Button)(_ref => {\n  let {\n    theme\n  } = _ref;\n  return { ...theme.typography.overline,\n    height: 40,\n    borderRadius: 0,\n    padding: theme.spacing(1, 2),\n    justifyContent: 'space-between',\n    color: theme.palette.text.disabled\n  };\n});\n// ----------------------------------------------------------------------\nexport default function ChatRoomGroupParticipant(_ref2) {\n  let {\n    participants,\n    selectUserId,\n    onShowPopupUserInfo,\n    isCollapse,\n    onCollapse\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CollapseButtonStyle, {\n      fullWidth: true,\n      disableRipple: true,\n      color: \"inherit\",\n      onClick: onCollapse,\n      endIcon: /*#__PURE__*/_jsxDEV(Iconify, {\n        icon: isCollapse ? 'eva:arrow-ios-downward-fill' : 'eva:arrow-ios-forward-fill',\n        width: 16,\n        height: 16\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this),\n      children: [\"In room (\", participants.length, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        height: isCollapse ? HEIGHT * 4 : 0\n      },\n      children: /*#__PURE__*/_jsxDEV(Scrollbar, {\n        children: /*#__PURE__*/_jsxDEV(Collapse, {\n          in: isCollapse,\n          sx: {\n            height: isCollapse ? HEIGHT * 4 : 0\n          },\n          children: /*#__PURE__*/_jsxDEV(List, {\n            disablePadding: true,\n            children: participants.map(participant => /*#__PURE__*/_jsxDEV(Participant, {\n              participant: participant,\n              isOpen: selectUserId === participant.id,\n              onShowPopup: () => onShowPopupUserInfo(participant.id),\n              onClosePopup: () => onShowPopupUserInfo(null)\n            }, participant.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n} // ----------------------------------------------------------------------\n\nfunction Participant(_ref3) {\n  let {\n    participant,\n    isOpen,\n    onClosePopup,\n    onShowPopup\n  } = _ref3;\n  const {\n    name,\n    avatar,\n    status,\n    position\n  } = participant;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ListItemButton, {\n      onClick: onShowPopup,\n      sx: {\n        height: HEIGHT,\n        px: 2.5\n      },\n      children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            position: 'relative',\n            width: 40,\n            height: 40\n          },\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            alt: name,\n            src: avatar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(BadgeStatus, {\n            status: status,\n            sx: {\n              right: 0,\n              bottom: 0,\n              position: 'absolute'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n        primary: name,\n        secondary: position,\n        primaryTypographyProps: {\n          variant: 'subtitle2',\n          noWrap: true\n        },\n        secondaryTypographyProps: {\n          noWrap: true\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatRoomPopup, {\n      participant: participant,\n      isOpen: isOpen,\n      onClose: onClosePopup\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}","map":{"version":3,"sources":["/Users/pongsiri.an/Downloads/Theme/Minimal_TypeScript_v2.7.0/full_version_TS/src/sections/@dashboard/chat/ChatRoomGroupParticipant.tsx"],"names":["styled","Box","List","Avatar","Button","Collapse","ListItemText","ListItemAvatar","ListItemButton","Iconify","Scrollbar","BadgeStatus","ChatRoomPopup","HEIGHT","CollapseButtonStyle","theme","typography","overline","height","borderRadius","padding","spacing","justifyContent","color","palette","text","disabled","ChatRoomGroupParticipant","participants","selectUserId","onShowPopupUserInfo","isCollapse","onCollapse","length","map","participant","id","Participant","isOpen","onClosePopup","onShowPopup","name","avatar","status","position","px","width","right","bottom","variant","noWrap"],"mappings":";AAAA;AACA,SAASA,MAAT,QAAuB,sBAAvB;AACA,SACEC,GADF,EAEEC,IAFF,EAGEC,MAHF,EAIEC,MAJF,EAKEC,QALF,EAMEC,YANF,EAOEC,cAPF,EAQEC,cARF,QASO,eATP,C,CAUA;;AAEA;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,OAAOC,WAAP,MAAwB,iCAAxB,C,CACA;;AACA,OAAOC,aAAP,MAA0B,iBAA1B,C,CAEA;;;;AAEA,MAAMC,MAAM,GAAG,EAAf;AAEA,MAAMC,mBAAmB,GAAGd,MAAM,CAACI,MAAD,CAAN,CAAe;AAAA,MAAC;AAAEW,IAAAA;AAAF,GAAD;AAAA,SAAgB,EACzD,GAAGA,KAAK,CAACC,UAAN,CAAiBC,QADqC;AAEzDC,IAAAA,MAAM,EAAE,EAFiD;AAGzDC,IAAAA,YAAY,EAAE,CAH2C;AAIzDC,IAAAA,OAAO,EAAEL,KAAK,CAACM,OAAN,CAAc,CAAd,EAAiB,CAAjB,CAJgD;AAKzDC,IAAAA,cAAc,EAAE,eALyC;AAMzDC,IAAAA,KAAK,EAAER,KAAK,CAACS,OAAN,CAAcC,IAAd,CAAmBC;AAN+B,GAAhB;AAAA,CAAf,CAA5B;AAiBA;AAEA,eAAe,SAASC,wBAAT,QAML;AAAA,MANuC;AAC/CC,IAAAA,YAD+C;AAE/CC,IAAAA,YAF+C;AAG/CC,IAAAA,mBAH+C;AAI/CC,IAAAA,UAJ+C;AAK/CC,IAAAA;AAL+C,GAMvC;AACR,sBACE;AAAA,4BACE,QAAC,mBAAD;AACE,MAAA,SAAS,MADX;AAEE,MAAA,aAAa,MAFf;AAGE,MAAA,KAAK,EAAC,SAHR;AAIE,MAAA,OAAO,EAAEA,UAJX;AAKE,MAAA,OAAO,eACL,QAAC,OAAD;AACE,QAAA,IAAI,EAAED,UAAU,GAAG,6BAAH,GAAmC,4BADrD;AAEE,QAAA,KAAK,EAAE,EAFT;AAGE,QAAA,MAAM,EAAE;AAHV;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA,8BAaYH,YAAY,CAACK,MAbzB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAiBE,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE;AAAEf,QAAAA,MAAM,EAAEa,UAAU,GAAGlB,MAAM,GAAG,CAAZ,GAAgB;AAApC,OAAT;AAAA,6BACE,QAAC,SAAD;AAAA,+BACE,QAAC,QAAD;AAAU,UAAA,EAAE,EAAEkB,UAAd;AAA0B,UAAA,EAAE,EAAE;AAAEb,YAAAA,MAAM,EAAEa,UAAU,GAAGlB,MAAM,GAAG,CAAZ,GAAgB;AAApC,WAA9B;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,cAAc,MAApB;AAAA,sBACGe,YAAY,CAACM,GAAb,CAAkBC,WAAD,iBAChB,QAAC,WAAD;AAEE,cAAA,WAAW,EAAEA,WAFf;AAGE,cAAA,MAAM,EAAEN,YAAY,KAAKM,WAAW,CAACC,EAHvC;AAIE,cAAA,WAAW,EAAE,MAAMN,mBAAmB,CAACK,WAAW,CAACC,EAAb,CAJxC;AAKE,cAAA,YAAY,EAAE,MAAMN,mBAAmB,CAAC,IAAD;AALzC,eACOK,WAAW,CAACC,EADnB;AAAA;AAAA;AAAA;AAAA,oBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAjBF;AAAA,kBADF;AAqCD,C,CAED;;AASA,SAASC,WAAT,QAA2F;AAAA,MAAtE;AAAEF,IAAAA,WAAF;AAAeG,IAAAA,MAAf;AAAuBC,IAAAA,YAAvB;AAAqCC,IAAAA;AAArC,GAAsE;AACzF,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,MAAR;AAAgBC,IAAAA,MAAhB;AAAwBC,IAAAA;AAAxB,MAAqCT,WAA3C;AAEA,sBACE;AAAA,4BACE,QAAC,cAAD;AAAgB,MAAA,OAAO,EAAEK,WAAzB;AAAsC,MAAA,EAAE,EAAE;AAAEtB,QAAAA,MAAM,EAAEL,MAAV;AAAkBgC,QAAAA,EAAE,EAAE;AAAtB,OAA1C;AAAA,8BACE,QAAC,cAAD;AAAA,+BACE,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE;AAAED,YAAAA,QAAQ,EAAE,UAAZ;AAAwBE,YAAAA,KAAK,EAAE,EAA/B;AAAmC5B,YAAAA,MAAM,EAAE;AAA3C,WAAT;AAAA,kCACE,QAAC,MAAD;AAAQ,YAAA,GAAG,EAAEuB,IAAb;AAAmB,YAAA,GAAG,EAAEC;AAAxB;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,WAAD;AAAa,YAAA,MAAM,EAAEC,MAArB;AAA6B,YAAA,EAAE,EAAE;AAAEI,cAAAA,KAAK,EAAE,CAAT;AAAYC,cAAAA,MAAM,EAAE,CAApB;AAAuBJ,cAAAA,QAAQ,EAAE;AAAjC;AAAjC;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAOE,QAAC,YAAD;AACE,QAAA,OAAO,EAAEH,IADX;AAEE,QAAA,SAAS,EAAEG,QAFb;AAGE,QAAA,sBAAsB,EAAE;AAAEK,UAAAA,OAAO,EAAE,WAAX;AAAwBC,UAAAA,MAAM,EAAE;AAAhC,SAH1B;AAIE,QAAA,wBAAwB,EAAE;AAAEA,UAAAA,MAAM,EAAE;AAAV;AAJ5B;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAeE,QAAC,aAAD;AAAe,MAAA,WAAW,EAAEf,WAA5B;AAAyC,MAAA,MAAM,EAAEG,MAAjD;AAAyD,MAAA,OAAO,EAAEC;AAAlE;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA,kBADF;AAmBD","sourcesContent":["// @mui\nimport { styled } from '@mui/material/styles';\nimport {\n  Box,\n  List,\n  Avatar,\n  Button,\n  Collapse,\n  ListItemText,\n  ListItemAvatar,\n  ListItemButton,\n} from '@mui/material';\n// @types\nimport { Participant as TParticipant } from '../../../@types/chat';\n// components\nimport Iconify from '../../../components/Iconify';\nimport Scrollbar from '../../../components/Scrollbar';\nimport BadgeStatus from '../../../components/BadgeStatus';\n//\nimport ChatRoomPopup from './ChatRoomPopup';\n\n// ----------------------------------------------------------------------\n\nconst HEIGHT = 64;\n\nconst CollapseButtonStyle = styled(Button)(({ theme }) => ({\n  ...theme.typography.overline,\n  height: 40,\n  borderRadius: 0,\n  padding: theme.spacing(1, 2),\n  justifyContent: 'space-between',\n  color: theme.palette.text.disabled,\n}));\n\ntype Props = {\n  participants: TParticipant[];\n  selectUserId: string | null;\n  onShowPopupUserInfo: (id: string | null) => void;\n  isCollapse: boolean;\n  onCollapse: VoidFunction;\n};\n\n// ----------------------------------------------------------------------\n\nexport default function ChatRoomGroupParticipant({\n  participants,\n  selectUserId,\n  onShowPopupUserInfo,\n  isCollapse,\n  onCollapse,\n}: Props) {\n  return (\n    <>\n      <CollapseButtonStyle\n        fullWidth\n        disableRipple\n        color=\"inherit\"\n        onClick={onCollapse}\n        endIcon={\n          <Iconify\n            icon={isCollapse ? 'eva:arrow-ios-downward-fill' : 'eva:arrow-ios-forward-fill'}\n            width={16}\n            height={16}\n          />\n        }\n      >\n        In room ({participants.length})\n      </CollapseButtonStyle>\n\n      <Box sx={{ height: isCollapse ? HEIGHT * 4 : 0 }}>\n        <Scrollbar>\n          <Collapse in={isCollapse} sx={{ height: isCollapse ? HEIGHT * 4 : 0 }}>\n            <List disablePadding>\n              {participants.map((participant) => (\n                <Participant\n                  key={participant.id}\n                  participant={participant}\n                  isOpen={selectUserId === participant.id}\n                  onShowPopup={() => onShowPopupUserInfo(participant.id)}\n                  onClosePopup={() => onShowPopupUserInfo(null)}\n                />\n              ))}\n            </List>\n          </Collapse>\n        </Scrollbar>\n      </Box>\n    </>\n  );\n}\n\n// ----------------------------------------------------------------------\n\ntype ParticipantProps = {\n  participant: TParticipant;\n  isOpen: boolean;\n  onClosePopup: VoidFunction;\n  onShowPopup: VoidFunction;\n};\n\nfunction Participant({ participant, isOpen, onClosePopup, onShowPopup }: ParticipantProps) {\n  const { name, avatar, status, position } = participant;\n\n  return (\n    <>\n      <ListItemButton onClick={onShowPopup} sx={{ height: HEIGHT, px: 2.5 }}>\n        <ListItemAvatar>\n          <Box sx={{ position: 'relative', width: 40, height: 40 }}>\n            <Avatar alt={name} src={avatar} />\n            <BadgeStatus status={status} sx={{ right: 0, bottom: 0, position: 'absolute' }} />\n          </Box>\n        </ListItemAvatar>\n        <ListItemText\n          primary={name}\n          secondary={position}\n          primaryTypographyProps={{ variant: 'subtitle2', noWrap: true }}\n          secondaryTypographyProps={{ noWrap: true }}\n        />\n      </ListItemButton>\n      <ChatRoomPopup participant={participant} isOpen={isOpen} onClose={onClosePopup} />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}