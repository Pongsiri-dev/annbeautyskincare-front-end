{"ast":null,"code":"var _jsxFileName = \"/Users/pongsiri.an/Documents/GitHub/Valenta-front-end/src/sections/@dashboard/kanban/KanbanColumnToolBar.tsx\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState, useEffect } from 'react'; // @mui\n\nimport { Stack, OutlinedInput, MenuItem, Typography, IconButton } from '@mui/material'; // components\n\nimport Iconify from '../../../components/Iconify';\nimport MenuPopover from '../../../components/MenuPopover'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function KanbanColumnToolBar(_ref) {\n  _s();\n\n  let {\n    columnName,\n    onDelete,\n    onUpdate\n  } = _ref;\n  const anchorRef = useRef(null);\n  const renameRef = useRef(null);\n  const [open, setOpen] = useState(false);\n  const [value, setValue] = useState(columnName);\n  useEffect(() => {\n    if (open) {\n      if (renameRef.current) {\n        renameRef.current.focus();\n      }\n    }\n  }, [open]);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleClickRename = () => {\n    handleClose();\n  };\n\n  const handleChangeColumnName = event => {\n    setValue(event.target.value);\n  };\n\n  const handleUpdateColumn = event => {\n    if (event.key === 'Enter' && renameRef.current) {\n      renameRef.current.blur();\n      onUpdate(value);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"row\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      spacing: 1,\n      sx: {\n        pt: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(OutlinedInput, {\n        size: \"small\",\n        placeholder: \"Section name\",\n        value: value,\n        onChange: handleChangeColumnName,\n        onKeyUp: handleUpdateColumn,\n        inputRef: renameRef,\n        sx: {\n          typography: 'h6',\n          fontWeight: 'fontWeightBold',\n          '& .MuiOutlinedInput-notchedOutline': {\n            borderColor: 'transparent'\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        ref: anchorRef,\n        size: \"small\",\n        onClick: handleOpen,\n        color: open ? 'inherit' : 'default',\n        children: /*#__PURE__*/_jsxDEV(Iconify, {\n          icon: 'eva:more-horizontal-fill',\n          width: 20,\n          height: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MenuPopover, {\n      open: open,\n      onClose: handleClose,\n      anchorEl: anchorRef.current,\n      sx: {\n        p: 1,\n        width: 'auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: handleClickRename,\n        sx: {\n          py: 0.75,\n          px: 1.5,\n          borderRadius: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(Iconify, {\n          icon: 'eva:edit-fill',\n          sx: {\n            width: 20,\n            height: 20,\n            flexShrink: 0,\n            mr: 1\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: \"Rename section\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: onDelete,\n        sx: {\n          py: 0.75,\n          px: 1.5,\n          borderRadius: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(Iconify, {\n          icon: 'eva:trash-2-outline',\n          sx: {\n            width: 20,\n            height: 20,\n            flexShrink: 0,\n            mr: 1\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: \"Delete section\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(KanbanColumnToolBar, \"2D1DSgNodB1irhPTESgjihTStxA=\");\n\n_c = KanbanColumnToolBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"KanbanColumnToolBar\");","map":{"version":3,"sources":["/Users/pongsiri.an/Documents/GitHub/Valenta-front-end/src/sections/@dashboard/kanban/KanbanColumnToolBar.tsx"],"names":["useRef","useState","useEffect","Stack","OutlinedInput","MenuItem","Typography","IconButton","Iconify","MenuPopover","KanbanColumnToolBar","columnName","onDelete","onUpdate","anchorRef","renameRef","open","setOpen","value","setValue","current","focus","handleOpen","handleClose","handleClickRename","handleChangeColumnName","event","target","handleUpdateColumn","key","blur","pt","typography","fontWeight","borderColor","p","width","py","px","borderRadius","height","flexShrink","mr"],"mappings":"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","sourcesContent":["import { useRef, useState, useEffect, ChangeEvent, KeyboardEvent } from 'react';\n// @mui\nimport { Stack, OutlinedInput, MenuItem, Typography, IconButton } from '@mui/material';\n// components\nimport Iconify from '../../../components/Iconify';\nimport MenuPopover from '../../../components/MenuPopover';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  columnName: string;\n  onDelete: VoidFunction;\n  onUpdate: (name: string) => void;\n};\n\nexport default function KanbanColumnToolBar({ columnName, onDelete, onUpdate }: Props) {\n  const anchorRef = useRef(null);\n  const renameRef = useRef<HTMLInputElement>(null);\n  const [open, setOpen] = useState(false);\n  const [value, setValue] = useState(columnName);\n\n  useEffect(() => {\n    if (open) {\n      if (renameRef.current) {\n        renameRef.current.focus();\n      }\n    }\n  }, [open]);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleClickRename = () => {\n    handleClose();\n  };\n\n  const handleChangeColumnName = (event: ChangeEvent<HTMLInputElement>) => {\n    setValue(event.target.value);\n  };\n\n  const handleUpdateColumn = (event: KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === 'Enter' && renameRef.current) {\n      renameRef.current.blur();\n      onUpdate(value);\n    }\n  };\n\n  return (\n    <>\n      <Stack\n        direction=\"row\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        spacing={1}\n        sx={{ pt: 3 }}\n      >\n        <OutlinedInput\n          size=\"small\"\n          placeholder=\"Section name\"\n          value={value}\n          onChange={handleChangeColumnName}\n          onKeyUp={handleUpdateColumn}\n          inputRef={renameRef}\n          sx={{\n            typography: 'h6',\n            fontWeight: 'fontWeightBold',\n            '& .MuiOutlinedInput-notchedOutline': {\n              borderColor: 'transparent',\n            },\n          }}\n        />\n\n        <IconButton\n          ref={anchorRef}\n          size=\"small\"\n          onClick={handleOpen}\n          color={open ? 'inherit' : 'default'}\n        >\n          <Iconify icon={'eva:more-horizontal-fill'} width={20} height={20} />\n        </IconButton>\n      </Stack>\n\n      <MenuPopover\n        open={open}\n        onClose={handleClose}\n        anchorEl={anchorRef.current}\n        sx={{ p: 1, width: 'auto' }}\n      >\n        <MenuItem onClick={handleClickRename} sx={{ py: 0.75, px: 1.5, borderRadius: 1 }}>\n          <Iconify icon={'eva:edit-fill'} sx={{ width: 20, height: 20, flexShrink: 0, mr: 1 }} />\n          <Typography variant=\"body2\">Rename section</Typography>\n        </MenuItem>\n        <MenuItem onClick={onDelete} sx={{ py: 0.75, px: 1.5, borderRadius: 1 }}>\n          <Iconify\n            icon={'eva:trash-2-outline'}\n            sx={{ width: 20, height: 20, flexShrink: 0, mr: 1 }}\n          />\n          <Typography variant=\"body2\">Delete section</Typography>\n        </MenuItem>\n      </MenuPopover>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}