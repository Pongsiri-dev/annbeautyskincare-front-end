{"ast":null,"code":"var _jsxFileName = \"/Users/pongsiri.an/Documents/GitHub/Valenta-front-end/src/components/mega-menu/MegaMenuMobile.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { NavLink as RouterLink, useLocation } from 'react-router-dom'; // @mui\n\nimport { Box, List, Stack, Drawer, Button, Divider, Typography, IconButton, ListItemText, ListItemIcon, ListItemButton } from '@mui/material'; // config\n\nimport { DASHBOARD_NAVBAR_WIDTH, DASHBOARD_NAVBAR_ICON_ITEM_SIZE } from '../../config'; // @types\n\n//\nimport Logo from '../Logo';\nimport Iconify from '../Iconify';\nimport Scrollbar from '../Scrollbar'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function MegaMenuMobile(_ref) {\n  _s();\n\n  let {\n    navConfig\n  } = _ref;\n  const {\n    pathname\n  } = useLocation();\n  const [openDrawer, setOpenDrawer] = useState(false);\n  useEffect(() => {\n    if (openDrawer) {\n      handleDrawerClose();\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [pathname]);\n\n  const handleDrawerOpen = () => {\n    setOpenDrawer(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpenDrawer(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: handleDrawerOpen,\n      startIcon: /*#__PURE__*/_jsxDEV(Iconify, {\n        icon: 'eva:menu-2-fill'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 20\n      }, this),\n      children: \"Menu Mobile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n      open: openDrawer,\n      onClose: handleDrawerClose,\n      ModalProps: {\n        keepMounted: true\n      },\n      PaperProps: {\n        sx: {\n          pb: 5,\n          width: DASHBOARD_NAVBAR_WIDTH\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(Scrollbar, {\n        children: [/*#__PURE__*/_jsxDEV(Logo, {\n          sx: {\n            mx: 2.5,\n            my: 3\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          sx: {\n            px: 2,\n            mb: 2,\n            display: 'flex',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            component: Iconify,\n            icon: 'eva:list-fill',\n            sx: {\n              mr: 1,\n              width: 24,\n              height: 24\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), ' ', \"Categories\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), navConfig.map(parent => /*#__PURE__*/_jsxDEV(SubMenu, {\n          parent: parent,\n          pathname: pathname\n        }, parent.title, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n} // ----------------------------------------------------------------------\n\n_s(MegaMenuMobile, \"EIY1uHVEkqO3lpBid2iR8oIdq4c=\", false, function () {\n  return [useLocation];\n});\n\n_c = MegaMenuMobile;\n\nfunction ParentItem(_ref2) {\n  let {\n    icon,\n    title,\n    hasSub,\n    ...other\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(ListItemButton, {\n    sx: {\n      textTransform: 'capitalize',\n      height: 44\n    },\n    ...other,\n    children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n      sx: {\n        width: 22,\n        height: 22\n      },\n      children: icon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n      primaryTypographyProps: {\n        typography: 'body2'\n      },\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), hasSub && /*#__PURE__*/_jsxDEV(Box, {\n      component: Iconify,\n      icon: 'eva:arrow-ios-forward-fill'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = ParentItem;\n\nfunction SubMenu(_ref3) {\n  _s2();\n\n  let {\n    parent,\n    pathname\n  } = _ref3;\n  const [open, setOpen] = useState(false);\n  const {\n    title,\n    icon,\n    path,\n    children\n  } = parent;\n  useEffect(() => {\n    if (open) {\n      handleClose();\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [pathname]);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  if (children) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ParentItem, {\n        title: title,\n        icon: icon,\n        onClick: handleOpen,\n        hasSub: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n        open: open,\n        onClose: handleClose,\n        ModalProps: {\n          keepMounted: true\n        },\n        PaperProps: {\n          sx: {\n            width: DASHBOARD_NAVBAR_WIDTH - 12\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(Stack, {\n          direction: \"row\",\n          alignItems: \"center\",\n          px: 1,\n          py: 1.5,\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: handleClose,\n            children: /*#__PURE__*/_jsxDEV(Iconify, {\n              icon: 'eva:arrow-ios-back-fill',\n              width: 20,\n              height: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            noWrap: true,\n            variant: \"subtitle1\",\n            sx: {\n              ml: 1,\n              textTransform: 'capitalize'\n            },\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Scrollbar, {\n          children: /*#__PURE__*/_jsxDEV(Stack, {\n            spacing: 5,\n            py: 3,\n            children: children.map(list => {\n              const {\n                subheader,\n                items\n              } = list;\n              return /*#__PURE__*/_jsxDEV(List, {\n                disablePadding: true,\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  component: \"div\",\n                  variant: \"overline\",\n                  sx: {\n                    px: 2.5,\n                    mb: 1,\n                    color: 'text.secondary'\n                  },\n                  noWrap: true,\n                  children: subheader\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 21\n                }, this), items.map(link => /*#__PURE__*/_jsxDEV(ListItemButton, {\n                  component: RouterLink,\n                  to: link.path,\n                  sx: {\n                    px: 1.5\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                    sx: {\n                      mr: 0.5,\n                      width: DASHBOARD_NAVBAR_ICON_ITEM_SIZE,\n                      height: DASHBOARD_NAVBAR_ICON_ITEM_SIZE,\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'center'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Box, {\n                      sx: {\n                        width: 4,\n                        height: 4,\n                        bgcolor: 'currentColor',\n                        borderRadius: '50%'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 173,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 163,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                    primary: link.title,\n                    primaryTypographyProps: {\n                      typography: 'body2',\n                      noWrap: true\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 182,\n                    columnNumber: 25\n                  }, this)]\n                }, link.title, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 23\n                }, this))]\n              }, subheader, true, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ParentItem, {\n    component: RouterLink,\n    title: title,\n    icon: icon,\n    to: path\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 10\n  }, this);\n}\n\n_s2(SubMenu, \"e27cRtNMdAs0U0o1oHlS6A8OEBo=\");\n\n_c3 = SubMenu;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"MegaMenuMobile\");\n$RefreshReg$(_c2, \"ParentItem\");\n$RefreshReg$(_c3, \"SubMenu\");","map":{"version":3,"sources":["/Users/pongsiri.an/Documents/GitHub/Valenta-front-end/src/components/mega-menu/MegaMenuMobile.tsx"],"names":["useState","useEffect","NavLink","RouterLink","useLocation","Box","List","Stack","Drawer","Button","Divider","Typography","IconButton","ListItemText","ListItemIcon","ListItemButton","DASHBOARD_NAVBAR_WIDTH","DASHBOARD_NAVBAR_ICON_ITEM_SIZE","Logo","Iconify","Scrollbar","MegaMenuMobile","navConfig","pathname","openDrawer","setOpenDrawer","handleDrawerClose","handleDrawerOpen","keepMounted","sx","pb","width","mx","my","px","mb","display","alignItems","mr","height","map","parent","title","ParentItem","icon","hasSub","other","textTransform","typography","SubMenu","open","setOpen","path","children","handleClose","handleOpen","ml","list","subheader","items","color","link","justifyContent","bgcolor","borderRadius","noWrap"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport { NavLink as RouterLink, useLocation } from 'react-router-dom';\n// @mui\nimport {\n  Box,\n  List,\n  Stack,\n  Drawer,\n  Button,\n  Divider,\n  Typography,\n  IconButton,\n  ListItemText,\n  ListItemIcon,\n  ListItemButton,\n} from '@mui/material';\n// config\nimport { DASHBOARD_NAVBAR_WIDTH, DASHBOARD_NAVBAR_ICON_ITEM_SIZE } from '../../config';\n// @types\nimport { ParentItemProps, MegaMenuItemProps } from './type';\n//\nimport Logo from '../Logo';\nimport Iconify from '../Iconify';\nimport Scrollbar from '../Scrollbar';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  navConfig: MegaMenuItemProps[];\n};\n\nexport default function MegaMenuMobile({ navConfig }: Props) {\n  const { pathname } = useLocation();\n  const [openDrawer, setOpenDrawer] = useState(false);\n\n  useEffect(() => {\n    if (openDrawer) {\n      handleDrawerClose();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [pathname]);\n\n  const handleDrawerOpen = () => {\n    setOpenDrawer(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpenDrawer(false);\n  };\n\n  return (\n    <>\n      <Button\n        variant=\"contained\"\n        onClick={handleDrawerOpen}\n        startIcon={<Iconify icon={'eva:menu-2-fill'} />}\n      >\n        Menu Mobile\n      </Button>\n\n      <Drawer\n        open={openDrawer}\n        onClose={handleDrawerClose}\n        ModalProps={{ keepMounted: true }}\n        PaperProps={{ sx: { pb: 5, width: DASHBOARD_NAVBAR_WIDTH } }}\n      >\n        <Scrollbar>\n          <Logo sx={{ mx: 2.5, my: 3 }} />\n\n          <Typography variant=\"h6\" sx={{ px: 2, mb: 2, display: 'flex', alignItems: 'center' }}>\n            <Box component={Iconify} icon={'eva:list-fill'} sx={{ mr: 1, width: 24, height: 24 }} />{' '}\n            Categories\n          </Typography>\n\n          {navConfig.map((parent) => (\n            <SubMenu key={parent.title} parent={parent} pathname={pathname} />\n          ))}\n        </Scrollbar>\n      </Drawer>\n    </>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nfunction ParentItem({ icon, title, hasSub, ...other }: ParentItemProps) {\n  return (\n    <ListItemButton sx={{ textTransform: 'capitalize', height: 44 }} {...other}>\n      <ListItemIcon sx={{ width: 22, height: 22 }}>{icon}</ListItemIcon>\n      <ListItemText primaryTypographyProps={{ typography: 'body2' }}>{title}</ListItemText>\n      {hasSub && <Box component={Iconify} icon={'eva:arrow-ios-forward-fill'} />}\n    </ListItemButton>\n  );\n}\n\ntype SubMenuProps = {\n  parent: MegaMenuItemProps;\n  pathname: string;\n};\n\nfunction SubMenu({ parent, pathname }: SubMenuProps) {\n  const [open, setOpen] = useState(false);\n  const { title, icon, path, children } = parent;\n\n  useEffect(() => {\n    if (open) {\n      handleClose();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [pathname]);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  if (children) {\n    return (\n      <>\n        <ParentItem title={title} icon={icon} onClick={handleOpen} hasSub />\n\n        <Drawer\n          open={open}\n          onClose={handleClose}\n          ModalProps={{ keepMounted: true }}\n          PaperProps={{ sx: { width: DASHBOARD_NAVBAR_WIDTH - 12 } }}\n        >\n          <Stack direction=\"row\" alignItems=\"center\" px={1} py={1.5}>\n            <IconButton onClick={handleClose}>\n              <Iconify icon={'eva:arrow-ios-back-fill'} width={20} height={20} />\n            </IconButton>\n            <Typography noWrap variant=\"subtitle1\" sx={{ ml: 1, textTransform: 'capitalize' }}>\n              {title}\n            </Typography>\n          </Stack>\n          <Divider />\n\n          <Scrollbar>\n            <Stack spacing={5} py={3}>\n              {children.map((list) => {\n                const { subheader, items } = list;\n\n                return (\n                  <List key={subheader} disablePadding>\n                    <Typography\n                      component=\"div\"\n                      variant=\"overline\"\n                      sx={{ px: 2.5, mb: 1, color: 'text.secondary' }}\n                      noWrap\n                    >\n                      {subheader}\n                    </Typography>\n                    {items.map((link) => (\n                      <ListItemButton\n                        key={link.title}\n                        component={RouterLink}\n                        to={link.path}\n                        sx={{ px: 1.5 }}\n                      >\n                        <ListItemIcon\n                          sx={{\n                            mr: 0.5,\n                            width: DASHBOARD_NAVBAR_ICON_ITEM_SIZE,\n                            height: DASHBOARD_NAVBAR_ICON_ITEM_SIZE,\n                            display: 'flex',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                          }}\n                        >\n                          <Box\n                            sx={{\n                              width: 4,\n                              height: 4,\n                              bgcolor: 'currentColor',\n                              borderRadius: '50%',\n                            }}\n                          />\n                        </ListItemIcon>\n                        <ListItemText\n                          primary={link.title}\n                          primaryTypographyProps={{ typography: 'body2', noWrap: true }}\n                        />\n                      </ListItemButton>\n                    ))}\n                  </List>\n                );\n              })}\n            </Stack>\n          </Scrollbar>\n        </Drawer>\n      </>\n    );\n  }\n\n  return <ParentItem component={RouterLink} title={title} icon={icon} to={path} />;\n}\n"]},"metadata":{},"sourceType":"module"}