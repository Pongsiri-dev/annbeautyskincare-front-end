{"ast":null,"code":"var _jsxFileName = \"/Users/pongsiri.an/Documents/GitHub/Valenta-front-end/src/sections/@dashboard/chat/ChatRoom.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react'; // @mui\n\nimport { useTheme, styled } from '@mui/material/styles';\nimport { Box, Drawer, Divider, IconButton } from '@mui/material'; // hooks\n\nimport useResponsive from '../../../hooks/useResponsive'; // @types\n\n// components\nimport Iconify from '../../../components/Iconify'; //\n\nimport ChatRoomAttachment from './ChatRoomAttachment';\nimport ChatRoomOneParticipant from './ChatRoomOneParticipant';\nimport ChatRoomGroupParticipant from './ChatRoomGroupParticipant'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DRAWER_WIDTH = 240;\nconst ToggleButtonStyle = styled(props => /*#__PURE__*/_jsxDEV(IconButton, {\n  disableRipple: true,\n  ...props\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 21,\n  columnNumber: 3\n}, this))(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    right: 0,\n    zIndex: 9,\n    width: 32,\n    height: 32,\n    position: 'absolute',\n    top: theme.spacing(1),\n    boxShadow: theme.customShadows.z8,\n    backgroundColor: theme.palette.background.paper,\n    border: `solid 1px ${theme.palette.divider}`,\n    borderRight: 0,\n    borderRadius: `12px 0 0 12px`,\n    transition: theme.transitions.create('all'),\n    '&:hover': {\n      backgroundColor: theme.palette.background.neutral\n    }\n  };\n}); // ----------------------------------------------------------------------\n\nexport default function ChatRoom(_ref2) {\n  _s();\n\n  let {\n    conversation,\n    participants\n  } = _ref2;\n  const theme = useTheme();\n  const [openSidebar, setOpenSidebar] = useState(true);\n  const [showInfo, setShowInfo] = useState(true);\n  const [selectUser, setSelectUser] = useState(null);\n  const [showAttachment, setShowAttachment] = useState(true);\n  const [showParticipants, setShowParticipants] = useState(true);\n  const isDesktop = useResponsive('up', 'lg');\n  const isGroup = participants.length > 1;\n  useEffect(() => {\n    if (!isDesktop) {\n      return handleCloseSidebar();\n    }\n\n    return handleOpenSidebar();\n  }, [isDesktop]);\n\n  const handleOpenSidebar = () => {\n    setOpenSidebar(true);\n  };\n\n  const handleCloseSidebar = () => {\n    setOpenSidebar(false);\n  };\n\n  const handleToggleSidebar = () => {\n    setOpenSidebar(prev => !prev);\n  };\n\n  const renderContent = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isGroup ? /*#__PURE__*/_jsxDEV(ChatRoomGroupParticipant, {\n      selectUserId: selectUser,\n      participants: participants,\n      isCollapse: showParticipants,\n      onShowPopupUserInfo: participantId => setSelectUser(participantId),\n      onCollapse: () => setShowParticipants(prev => !prev)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ChatRoomOneParticipant, {\n        participants: participants,\n        isCollapse: showInfo,\n        onCollapse: () => setShowInfo(prev => !prev)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatRoomAttachment, {\n      conversation: conversation,\n      isCollapse: showAttachment,\n      onCollapse: () => setShowAttachment(prev => !prev)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      position: 'relative'\n    },\n    children: [/*#__PURE__*/_jsxDEV(ToggleButtonStyle, {\n      onClick: handleToggleSidebar,\n      sx: { ...(openSidebar && isDesktop && {\n          right: DRAWER_WIDTH\n        })\n      },\n      children: /*#__PURE__*/_jsxDEV(Iconify, {\n        width: 16,\n        height: 16,\n        icon: openSidebar ? 'eva:arrow-ios-forward-fill' : 'eva:arrow-ios-back-fill'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), isDesktop ? /*#__PURE__*/_jsxDEV(Drawer, {\n      open: openSidebar,\n      anchor: \"right\",\n      variant: \"persistent\",\n      sx: {\n        height: 1,\n        width: DRAWER_WIDTH,\n        transition: theme.transitions.create('width'),\n        ...(!openSidebar && {\n          width: '0px'\n        }),\n        '& .MuiDrawer-paper': {\n          position: 'static',\n          width: DRAWER_WIDTH\n        }\n      },\n      children: renderContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Drawer, {\n      anchor: \"right\",\n      ModalProps: {\n        keepMounted: true\n      },\n      open: openSidebar,\n      onClose: handleCloseSidebar,\n      sx: {\n        '& .MuiDrawer-paper': {\n          width: DRAWER_WIDTH\n        }\n      },\n      children: renderContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChatRoom, \"U+VkjgK21DD+CtX9FI1PAS5hHlo=\", false, function () {\n  return [useTheme, useResponsive];\n});\n\n_c = ChatRoom;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"sources":["/Users/pongsiri.an/Documents/GitHub/Valenta-front-end/src/sections/@dashboard/chat/ChatRoom.tsx"],"names":["useState","useEffect","useTheme","styled","Box","Drawer","Divider","IconButton","useResponsive","Iconify","ChatRoomAttachment","ChatRoomOneParticipant","ChatRoomGroupParticipant","DRAWER_WIDTH","ToggleButtonStyle","props","theme","right","zIndex","width","height","position","top","spacing","boxShadow","customShadows","z8","backgroundColor","palette","background","paper","border","divider","borderRight","borderRadius","transition","transitions","create","neutral","ChatRoom","conversation","participants","openSidebar","setOpenSidebar","showInfo","setShowInfo","selectUser","setSelectUser","showAttachment","setShowAttachment","showParticipants","setShowParticipants","isDesktop","isGroup","length","handleCloseSidebar","handleOpenSidebar","handleToggleSidebar","prev","renderContent","participantId","keepMounted"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC,C,CACA;;AACA,SAASC,QAAT,EAAmBC,MAAnB,QAAiC,sBAAjC;AACA,SAASC,GAAT,EAAcC,MAAd,EAAsBC,OAAtB,EAA+BC,UAA/B,QAAkE,eAAlE,C,CACA;;AACA,OAAOC,aAAP,MAA0B,8BAA1B,C,CACA;;AAEA;AACA,OAAOC,OAAP,MAAoB,6BAApB,C,CACA;;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,sBAAP,MAAmC,0BAAnC;AACA,OAAOC,wBAAP,MAAqC,4BAArC,C,CAEA;;;;AAEA,MAAMC,YAAY,GAAG,GAArB;AAEA,MAAMC,iBAAiB,GAAGX,MAAM,CAAEY,KAAD,iBAC/B,QAAC,UAAD;AAAY,EAAA,aAAa,MAAzB;AAAA,KAA8BA;AAA9B;AAAA;AAAA;AAAA;AAAA,QAD8B,CAAN,CAEN;AAAA,MAAC;AAAEC,IAAAA;AAAF,GAAD;AAAA,SAAgB;AAClCC,IAAAA,KAAK,EAAE,CAD2B;AAElCC,IAAAA,MAAM,EAAE,CAF0B;AAGlCC,IAAAA,KAAK,EAAE,EAH2B;AAIlCC,IAAAA,MAAM,EAAE,EAJ0B;AAKlCC,IAAAA,QAAQ,EAAE,UALwB;AAMlCC,IAAAA,GAAG,EAAEN,KAAK,CAACO,OAAN,CAAc,CAAd,CAN6B;AAOlCC,IAAAA,SAAS,EAAER,KAAK,CAACS,aAAN,CAAoBC,EAPG;AAQlCC,IAAAA,eAAe,EAAEX,KAAK,CAACY,OAAN,CAAcC,UAAd,CAAyBC,KARR;AASlCC,IAAAA,MAAM,EAAG,aAAYf,KAAK,CAACY,OAAN,CAAcI,OAAQ,EATT;AAUlCC,IAAAA,WAAW,EAAE,CAVqB;AAWlCC,IAAAA,YAAY,EAAG,eAXmB;AAYlCC,IAAAA,UAAU,EAAEnB,KAAK,CAACoB,WAAN,CAAkBC,MAAlB,CAAyB,KAAzB,CAZsB;AAalC,eAAW;AACTV,MAAAA,eAAe,EAAEX,KAAK,CAACY,OAAN,CAAcC,UAAd,CAAyBS;AADjC;AAbuB,GAAhB;AAAA,CAFM,CAA1B,C,CAoBA;;AAOA,eAAe,SAASC,QAAT,QAAyD;AAAA;;AAAA,MAAvC;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,GAAuC;AACtE,QAAMzB,KAAK,GAAGd,QAAQ,EAAtB;AAEA,QAAM,CAACwC,WAAD,EAAcC,cAAd,IAAgC3C,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM,CAAC4C,QAAD,EAAWC,WAAX,IAA0B7C,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAAC8C,UAAD,EAAaC,aAAb,IAA8B/C,QAAQ,CAAgB,IAAhB,CAA5C;AACA,QAAM,CAACgD,cAAD,EAAiBC,iBAAjB,IAAsCjD,QAAQ,CAAC,IAAD,CAApD;AACA,QAAM,CAACkD,gBAAD,EAAmBC,mBAAnB,IAA0CnD,QAAQ,CAAC,IAAD,CAAxD;AAEA,QAAMoD,SAAS,GAAG5C,aAAa,CAAC,IAAD,EAAO,IAAP,CAA/B;AAEA,QAAM6C,OAAO,GAAGZ,YAAY,CAACa,MAAb,GAAsB,CAAtC;AAEArD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACmD,SAAL,EAAgB;AACd,aAAOG,kBAAkB,EAAzB;AACD;;AACD,WAAOC,iBAAiB,EAAxB;AACD,GALQ,EAKN,CAACJ,SAAD,CALM,CAAT;;AAOA,QAAMI,iBAAiB,GAAG,MAAM;AAC9Bb,IAAAA,cAAc,CAAC,IAAD,CAAd;AACD,GAFD;;AAIA,QAAMY,kBAAkB,GAAG,MAAM;AAC/BZ,IAAAA,cAAc,CAAC,KAAD,CAAd;AACD,GAFD;;AAIA,QAAMc,mBAAmB,GAAG,MAAM;AAChCd,IAAAA,cAAc,CAAEe,IAAD,IAAU,CAACA,IAAZ,CAAd;AACD,GAFD;;AAIA,QAAMC,aAAa,gBACjB;AAAA,eACGN,OAAO,gBACN,QAAC,wBAAD;AACE,MAAA,YAAY,EAAEP,UADhB;AAEE,MAAA,YAAY,EAAEL,YAFhB;AAGE,MAAA,UAAU,EAAES,gBAHd;AAIE,MAAA,mBAAmB,EAAGU,aAAD,IAAmBb,aAAa,CAACa,aAAD,CAJvD;AAKE,MAAA,UAAU,EAAE,MAAMT,mBAAmB,CAAEO,IAAD,IAAU,CAACA,IAAZ;AALvC;AAAA;AAAA;AAAA;AAAA,YADM,gBASN;AAAA,6BACE,QAAC,sBAAD;AACE,QAAA,YAAY,EAAEjB,YADhB;AAEE,QAAA,UAAU,EAAEG,QAFd;AAGE,QAAA,UAAU,EAAE,MAAMC,WAAW,CAAEa,IAAD,IAAU,CAACA,IAAZ;AAH/B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAVJ,eAkBE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAlBF,eAoBE,QAAC,kBAAD;AACE,MAAA,YAAY,EAAElB,YADhB;AAEE,MAAA,UAAU,EAAEQ,cAFd;AAGE,MAAA,UAAU,EAAE,MAAMC,iBAAiB,CAAES,IAAD,IAAU,CAACA,IAAZ;AAHrC;AAAA;AAAA;AAAA;AAAA,YApBF;AAAA,kBADF;;AA6BA,sBACE,QAAC,GAAD;AAAK,IAAA,EAAE,EAAE;AAAErC,MAAAA,QAAQ,EAAE;AAAZ,KAAT;AAAA,4BACE,QAAC,iBAAD;AACE,MAAA,OAAO,EAAEoC,mBADX;AAEE,MAAA,EAAE,EAAE,EACF,IAAIf,WAAW,IAAIU,SAAf,IAA4B;AAAEnC,UAAAA,KAAK,EAAEJ;AAAT,SAAhC;AADE,OAFN;AAAA,6BAME,QAAC,OAAD;AACE,QAAA,KAAK,EAAE,EADT;AAEE,QAAA,MAAM,EAAE,EAFV;AAGE,QAAA,IAAI,EAAE6B,WAAW,GAAG,4BAAH,GAAkC;AAHrD;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,YADF,EAcGU,SAAS,gBACR,QAAC,MAAD;AACE,MAAA,IAAI,EAAEV,WADR;AAEE,MAAA,MAAM,EAAC,OAFT;AAGE,MAAA,OAAO,EAAC,YAHV;AAIE,MAAA,EAAE,EAAE;AACFtB,QAAAA,MAAM,EAAE,CADN;AAEFD,QAAAA,KAAK,EAAEN,YAFL;AAGFsB,QAAAA,UAAU,EAAEnB,KAAK,CAACoB,WAAN,CAAkBC,MAAlB,CAAyB,OAAzB,CAHV;AAIF,YAAI,CAACK,WAAD,IAAgB;AAAEvB,UAAAA,KAAK,EAAE;AAAT,SAApB,CAJE;AAKF,8BAAsB;AACpBE,UAAAA,QAAQ,EAAE,QADU;AAEpBF,UAAAA,KAAK,EAAEN;AAFa;AALpB,OAJN;AAAA,gBAeG8C;AAfH;AAAA;AAAA;AAAA;AAAA,YADQ,gBAmBR,QAAC,MAAD;AACE,MAAA,MAAM,EAAC,OADT;AAEE,MAAA,UAAU,EAAE;AAAEE,QAAAA,WAAW,EAAE;AAAf,OAFd;AAGE,MAAA,IAAI,EAAEnB,WAHR;AAIE,MAAA,OAAO,EAAEa,kBAJX;AAKE,MAAA,EAAE,EAAE;AACF,8BAAsB;AACpBpC,UAAAA,KAAK,EAAEN;AADa;AADpB,OALN;AAAA,gBAWG8C;AAXH;AAAA;AAAA;AAAA;AAAA,YAjCJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkDD;;GA/GuBpB,Q;UACRrC,Q,EAQIM,a;;;KATI+B,Q","sourcesContent":["import { useState, useEffect } from 'react';\n// @mui\nimport { useTheme, styled } from '@mui/material/styles';\nimport { Box, Drawer, Divider, IconButton, IconButtonProps } from '@mui/material';\n// hooks\nimport useResponsive from '../../../hooks/useResponsive';\n// @types\nimport { Conversation, Participant } from '../../../@types/chat';\n// components\nimport Iconify from '../../../components/Iconify';\n//\nimport ChatRoomAttachment from './ChatRoomAttachment';\nimport ChatRoomOneParticipant from './ChatRoomOneParticipant';\nimport ChatRoomGroupParticipant from './ChatRoomGroupParticipant';\n\n// ----------------------------------------------------------------------\n\nconst DRAWER_WIDTH = 240;\n\nconst ToggleButtonStyle = styled((props) => (\n  <IconButton disableRipple {...props} />\n))<IconButtonProps>(({ theme }) => ({\n  right: 0,\n  zIndex: 9,\n  width: 32,\n  height: 32,\n  position: 'absolute',\n  top: theme.spacing(1),\n  boxShadow: theme.customShadows.z8,\n  backgroundColor: theme.palette.background.paper,\n  border: `solid 1px ${theme.palette.divider}`,\n  borderRight: 0,\n  borderRadius: `12px 0 0 12px`,\n  transition: theme.transitions.create('all'),\n  '&:hover': {\n    backgroundColor: theme.palette.background.neutral,\n  },\n}));\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  conversation: Conversation;\n  participants: Participant[];\n};\n\nexport default function ChatRoom({ conversation, participants }: Props) {\n  const theme = useTheme();\n\n  const [openSidebar, setOpenSidebar] = useState(true);\n  const [showInfo, setShowInfo] = useState(true);\n  const [selectUser, setSelectUser] = useState<string | null>(null);\n  const [showAttachment, setShowAttachment] = useState(true);\n  const [showParticipants, setShowParticipants] = useState(true);\n\n  const isDesktop = useResponsive('up', 'lg');\n\n  const isGroup = participants.length > 1;\n\n  useEffect(() => {\n    if (!isDesktop) {\n      return handleCloseSidebar();\n    }\n    return handleOpenSidebar();\n  }, [isDesktop]);\n\n  const handleOpenSidebar = () => {\n    setOpenSidebar(true);\n  };\n\n  const handleCloseSidebar = () => {\n    setOpenSidebar(false);\n  };\n\n  const handleToggleSidebar = () => {\n    setOpenSidebar((prev) => !prev);\n  };\n\n  const renderContent = (\n    <>\n      {isGroup ? (\n        <ChatRoomGroupParticipant\n          selectUserId={selectUser}\n          participants={participants}\n          isCollapse={showParticipants}\n          onShowPopupUserInfo={(participantId) => setSelectUser(participantId)}\n          onCollapse={() => setShowParticipants((prev) => !prev)}\n        />\n      ) : (\n        <div>\n          <ChatRoomOneParticipant\n            participants={participants}\n            isCollapse={showInfo}\n            onCollapse={() => setShowInfo((prev) => !prev)}\n          />\n        </div>\n      )}\n      <Divider />\n\n      <ChatRoomAttachment\n        conversation={conversation}\n        isCollapse={showAttachment}\n        onCollapse={() => setShowAttachment((prev) => !prev)}\n      />\n    </>\n  );\n\n  return (\n    <Box sx={{ position: 'relative' }}>\n      <ToggleButtonStyle\n        onClick={handleToggleSidebar}\n        sx={{\n          ...(openSidebar && isDesktop && { right: DRAWER_WIDTH }),\n        }}\n      >\n        <Iconify\n          width={16}\n          height={16}\n          icon={openSidebar ? 'eva:arrow-ios-forward-fill' : 'eva:arrow-ios-back-fill'}\n        />\n      </ToggleButtonStyle>\n\n      {isDesktop ? (\n        <Drawer\n          open={openSidebar}\n          anchor=\"right\"\n          variant=\"persistent\"\n          sx={{\n            height: 1,\n            width: DRAWER_WIDTH,\n            transition: theme.transitions.create('width'),\n            ...(!openSidebar && { width: '0px' }),\n            '& .MuiDrawer-paper': {\n              position: 'static',\n              width: DRAWER_WIDTH,\n            },\n          }}\n        >\n          {renderContent}\n        </Drawer>\n      ) : (\n        <Drawer\n          anchor=\"right\"\n          ModalProps={{ keepMounted: true }}\n          open={openSidebar}\n          onClose={handleCloseSidebar}\n          sx={{\n            '& .MuiDrawer-paper': {\n              width: DRAWER_WIDTH,\n            },\n          }}\n        >\n          {renderContent}\n        </Drawer>\n      )}\n    </Box>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}