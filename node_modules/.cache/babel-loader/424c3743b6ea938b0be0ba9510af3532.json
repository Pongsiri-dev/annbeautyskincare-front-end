{"ast":null,"code":"var _jsxFileName = \"/Users/pongsiri.an/Downloads/Theme/Minimal_TypeScript_v2.7.0/full_version_TS/src/pages/overview/extra/animate/dialog/ContainerView.tsx\";\n// @mui\nimport { Paper, Button, DialogTitle, DialogActions, DialogContent, DialogContentText } from '@mui/material'; // components\n\nimport { DialogAnimate } from '../../../../../components/animate'; //\n\nimport getVariant from '../getVariant'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ContainerView(_ref) {\n  let {\n    isOpen,\n    onOpen,\n    onClose,\n    selectVariant,\n    ...other\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    sx: {\n      height: 480,\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      bgcolor: 'background.neutral'\n    },\n    ...other,\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: onOpen,\n      children: \"Click Me!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogAnimate, {\n      open: isOpen,\n      onClose: onClose,\n      variants: getVariant(selectVariant),\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"alert-dialog-title\",\n        children: \"Use Google's location service?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          id: \"alert-dialog-description\",\n          children: \"Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: onClose,\n          children: \"Disagree\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: onClose,\n          autoFocus: true,\n          children: \"Agree\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/pongsiri.an/Downloads/Theme/Minimal_TypeScript_v2.7.0/full_version_TS/src/pages/overview/extra/animate/dialog/ContainerView.tsx"],"names":["Paper","Button","DialogTitle","DialogActions","DialogContent","DialogContentText","DialogAnimate","getVariant","ContainerView","isOpen","onOpen","onClose","selectVariant","other","height","display","alignItems","justifyContent","bgcolor"],"mappings":";AAAA;AACA,SACEA,KADF,EAEEC,MAFF,EAGEC,WAHF,EAIEC,aAJF,EAKEC,aALF,EAMEC,iBANF,QAOO,eAPP,C,CAQA;;AACA,SAASC,aAAT,QAA8B,mCAA9B,C,CACA;;AACA,OAAOC,UAAP,MAAuB,eAAvB,C,CAEA;;;AASA,eAAe,SAASC,aAAT,OAMQ;AAAA,MANe;AACpCC,IAAAA,MADoC;AAEpCC,IAAAA,MAFoC;AAGpCC,IAAAA,OAHoC;AAIpCC,IAAAA,aAJoC;AAKpC,OAAGC;AALiC,GAMf;AACrB,sBACE,QAAC,KAAD;AACE,IAAA,EAAE,EAAE;AACFC,MAAAA,MAAM,EAAE,GADN;AAEFC,MAAAA,OAAO,EAAE,MAFP;AAGFC,MAAAA,UAAU,EAAE,QAHV;AAIFC,MAAAA,cAAc,EAAE,QAJd;AAKFC,MAAAA,OAAO,EAAE;AALP,KADN;AAAA,OAQML,KARN;AAAA,4BAUE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,WAAhB;AAA4B,MAAA,OAAO,EAAEH,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF,eAaE,QAAC,aAAD;AAAe,MAAA,IAAI,EAAED,MAArB;AAA6B,MAAA,OAAO,EAAEE,OAAtC;AAA+C,MAAA,QAAQ,EAAEJ,UAAU,CAACK,aAAD,CAAnE;AAAA,8BACE,QAAC,WAAD;AAAa,QAAA,EAAE,EAAC,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,aAAD;AAAA,+BACE,QAAC,iBAAD;AAAmB,UAAA,EAAE,EAAC,0BAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF,eAQE,QAAC,aAAD;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAED,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,WAAhB;AAA4B,UAAA,OAAO,EAAEA,OAArC;AAA8C,UAAA,SAAS,MAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD","sourcesContent":["// @mui\nimport {\n  Paper,\n  Button,\n  DialogTitle,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n} from '@mui/material';\n// components\nimport { DialogAnimate } from '../../../../../components/animate';\n//\nimport getVariant from '../getVariant';\n\n// ----------------------------------------------------------------------\n\ntype ContainerViewProps = {\n  isOpen: boolean;\n  onOpen: VoidFunction;\n  onClose: VoidFunction;\n  selectVariant: string;\n};\n\nexport default function ContainerView({\n  isOpen,\n  onOpen,\n  onClose,\n  selectVariant,\n  ...other\n}: ContainerViewProps) {\n  return (\n    <Paper\n      sx={{\n        height: 480,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        bgcolor: 'background.neutral',\n      }}\n      {...other}\n    >\n      <Button variant=\"contained\" onClick={onOpen}>\n        Click Me!\n      </Button>\n      <DialogAnimate open={isOpen} onClose={onClose} variants={getVariant(selectVariant)}>\n        <DialogTitle id=\"alert-dialog-title\">Use Google's location service?</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Let Google help apps determine location. This means sending anonymous location data to\n            Google, even when no apps are running.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onClose}>Disagree</Button>\n          <Button variant=\"contained\" onClick={onClose} autoFocus>\n            Agree\n          </Button>\n        </DialogActions>\n      </DialogAnimate>\n    </Paper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}