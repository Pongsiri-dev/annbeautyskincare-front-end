{"ast":null,"code":"var _jsxFileName = \"/Users/pongsiri.an/Documents/GitHub/Valenta-front-end/src/sections/@dashboard/blog/BlogPostCommentList.tsx\";\n// @mui\nimport { Box, List } from '@mui/material'; // @types\n\n//\nimport BlogPostCommentItem from './BlogPostCommentItem'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BlogPostCommentList(_ref) {\n  let {\n    post\n  } = _ref;\n  const {\n    comments\n  } = post;\n  return /*#__PURE__*/_jsxDEV(List, {\n    disablePadding: true,\n    children: comments.map(comment => {\n      const {\n        id,\n        replyComment,\n        users\n      } = comment;\n      const hasReply = replyComment.length > 0;\n      return /*#__PURE__*/_jsxDEV(Box, {\n        sx: {},\n        children: [/*#__PURE__*/_jsxDEV(BlogPostCommentItem, {\n          name: comment.name,\n          avatarUrl: comment.avatarUrl,\n          postedAt: comment.postedAt,\n          message: comment.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this), hasReply && replyComment.map(reply => {\n          const user = users.find(_user => _user.id === reply.userId);\n          return /*#__PURE__*/_jsxDEV(BlogPostCommentItem, {\n            tagUser: reply.tagUser,\n            postedAt: reply.postedAt,\n            message: reply.message,\n            name: (user === null || user === void 0 ? void 0 : user.name) || '',\n            avatarUrl: user === null || user === void 0 ? void 0 : user.avatarUrl,\n            hasReply: true\n          }, reply.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 19\n          }, this);\n        })]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_c = BlogPostCommentList;\n\nvar _c;\n\n$RefreshReg$(_c, \"BlogPostCommentList\");","map":{"version":3,"sources":["/Users/pongsiri.an/Documents/GitHub/Valenta-front-end/src/sections/@dashboard/blog/BlogPostCommentList.tsx"],"names":["Box","List","BlogPostCommentItem","BlogPostCommentList","post","comments","map","comment","id","replyComment","users","hasReply","length","name","avatarUrl","postedAt","message","reply","user","find","_user","userId","tagUser"],"mappings":";AAAA;AACA,SAASA,GAAT,EAAcC,IAAd,QAA0B,eAA1B,C,CACA;;AAEA;AACA,OAAOC,mBAAP,MAAgC,uBAAhC,C,CAEA;;;AAMA,eAAe,SAASC,mBAAT,OAA8C;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAC3D,QAAM;AAAEC,IAAAA;AAAF,MAAeD,IAArB;AAEA,sBACE,QAAC,IAAD;AAAM,IAAA,cAAc,MAApB;AAAA,cACGC,QAAQ,CAACC,GAAT,CAAcC,OAAD,IAAa;AACzB,YAAM;AAAEC,QAAAA,EAAF;AAAMC,QAAAA,YAAN;AAAoBC,QAAAA;AAApB,UAA8BH,OAApC;AACA,YAAMI,QAAQ,GAAGF,YAAY,CAACG,MAAb,GAAsB,CAAvC;AAEA,0BACE,QAAC,GAAD;AAAc,QAAA,EAAE,EAAE,EAAlB;AAAA,gCACE,QAAC,mBAAD;AACE,UAAA,IAAI,EAAEL,OAAO,CAACM,IADhB;AAEE,UAAA,SAAS,EAAEN,OAAO,CAACO,SAFrB;AAGE,UAAA,QAAQ,EAAEP,OAAO,CAACQ,QAHpB;AAIE,UAAA,OAAO,EAAER,OAAO,CAACS;AAJnB;AAAA;AAAA;AAAA;AAAA,gBADF,EAOGL,QAAQ,IACPF,YAAY,CAACH,GAAb,CAAkBW,KAAD,IAAW;AAC1B,gBAAMC,IAAI,GAAGR,KAAK,CAACS,IAAN,CAAYC,KAAD,IAAWA,KAAK,CAACZ,EAAN,KAAaS,KAAK,CAACI,MAAzC,CAAb;AACA,8BACE,QAAC,mBAAD;AAEE,YAAA,OAAO,EAAEJ,KAAK,CAACK,OAFjB;AAGE,YAAA,QAAQ,EAAEL,KAAK,CAACF,QAHlB;AAIE,YAAA,OAAO,EAAEE,KAAK,CAACD,OAJjB;AAKE,YAAA,IAAI,EAAE,CAAAE,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEL,IAAN,KAAc,EALtB;AAME,YAAA,SAAS,EAAEK,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEJ,SANnB;AAOE,YAAA,QAAQ;AAPV,aACOG,KAAK,CAACT,EADb;AAAA;AAAA;AAAA;AAAA,kBADF;AAWD,SAbD,CARJ;AAAA,SAAUA,EAAV;AAAA;AAAA;AAAA;AAAA,cADF;AAyBD,KA7BA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAkCD;KArCuBL,mB","sourcesContent":["// @mui\nimport { Box, List } from '@mui/material';\n// @types\nimport { Post } from '../../../@types/blog';\n//\nimport BlogPostCommentItem from './BlogPostCommentItem';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  post: Post;\n};\n\nexport default function BlogPostCommentList({ post }: Props) {\n  const { comments } = post;\n\n  return (\n    <List disablePadding>\n      {comments.map((comment) => {\n        const { id, replyComment, users } = comment;\n        const hasReply = replyComment.length > 0;\n\n        return (\n          <Box key={id} sx={{}}>\n            <BlogPostCommentItem\n              name={comment.name}\n              avatarUrl={comment.avatarUrl}\n              postedAt={comment.postedAt}\n              message={comment.message}\n            />\n            {hasReply &&\n              replyComment.map((reply) => {\n                const user = users.find((_user) => _user.id === reply.userId);\n                return (\n                  <BlogPostCommentItem\n                    key={reply.id}\n                    tagUser={reply.tagUser}\n                    postedAt={reply.postedAt}\n                    message={reply.message}\n                    name={user?.name || ''}\n                    avatarUrl={user?.avatarUrl}\n                    hasReply\n                  />\n                );\n              })}\n          </Box>\n        );\n      })}\n    </List>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}