{"ast":null,"code":"var _jsxFileName = \"/Users/pongsiri.an/Downloads/Theme/Minimal_TypeScript_v2.7.0/full_version_TS/src/components/Avatar.tsx\";\nimport { forwardRef } from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport { Avatar as MUIAvatar } from '@mui/material'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Avatar = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n    color = 'default',\n    children,\n    sx,\n    ...other\n  } = _ref;\n  const theme = useTheme();\n\n  if (color === 'default') {\n    return /*#__PURE__*/_jsxDEV(MUIAvatar, {\n      ref: ref,\n      sx: sx,\n      ...other,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(MUIAvatar, {\n    ref: ref,\n    sx: {\n      fontWeight: theme.typography.fontWeightMedium,\n      color: theme.palette[color].contrastText,\n      backgroundColor: theme.palette[color].main,\n      ...sx\n    },\n    ...other,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 7\n  }, this);\n});\nexport default Avatar;","map":{"version":3,"sources":["/Users/pongsiri.an/Downloads/Theme/Minimal_TypeScript_v2.7.0/full_version_TS/src/components/Avatar.tsx"],"names":["forwardRef","useTheme","Avatar","MUIAvatar","ref","color","children","sx","other","theme","fontWeight","typography","fontWeightMedium","palette","contrastText","backgroundColor","main"],"mappings":";AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,QAAT,QAAyB,sBAAzB;AACA,SAASC,MAAM,IAAIC,SAAnB,QAAiD,eAAjD,C,CAEA;;;AAUA,MAAMD,MAAM,gBAAGF,UAAU,CACvB,OAAgDI,GAAhD,KAAwD;AAAA,MAAvD;AAAEC,IAAAA,KAAK,GAAG,SAAV;AAAqBC,IAAAA,QAArB;AAA+BC,IAAAA,EAA/B;AAAmC,OAAGC;AAAtC,GAAuD;AACtD,QAAMC,KAAK,GAAGR,QAAQ,EAAtB;;AAEA,MAAII,KAAK,KAAK,SAAd,EAAyB;AACvB,wBACE,QAAC,SAAD;AAAW,MAAA,GAAG,EAAED,GAAhB;AAAqB,MAAA,EAAE,EAAEG,EAAzB;AAAA,SAAiCC,KAAjC;AAAA,gBACGF;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,sBACE,QAAC,SAAD;AACE,IAAA,GAAG,EAAEF,GADP;AAEE,IAAA,EAAE,EAAE;AACFM,MAAAA,UAAU,EAAED,KAAK,CAACE,UAAN,CAAiBC,gBAD3B;AAEFP,MAAAA,KAAK,EAAEI,KAAK,CAACI,OAAN,CAAcR,KAAd,EAAqBS,YAF1B;AAGFC,MAAAA,eAAe,EAAEN,KAAK,CAACI,OAAN,CAAcR,KAAd,EAAqBW,IAHpC;AAIF,SAAGT;AAJD,KAFN;AAAA,OAQMC,KARN;AAAA,cAUGF;AAVH;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CA1BsB,CAAzB;AA6BA,eAAeJ,MAAf","sourcesContent":["import { forwardRef } from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport { Avatar as MUIAvatar, AvatarProps } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\ntype AvatarColor = 'default' | 'primary' | 'secondary' | 'info' | 'success' | 'warning' | 'error';\n\n// ----------------------------------------------------------------------\n\nexport interface Props extends AvatarProps {\n  color?: AvatarColor;\n}\n\nconst Avatar = forwardRef<HTMLDivElement, Props>(\n  ({ color = 'default', children, sx, ...other }, ref) => {\n    const theme = useTheme();\n\n    if (color === 'default') {\n      return (\n        <MUIAvatar ref={ref} sx={sx} {...other}>\n          {children}\n        </MUIAvatar>\n      );\n    }\n\n    return (\n      <MUIAvatar\n        ref={ref}\n        sx={{\n          fontWeight: theme.typography.fontWeightMedium,\n          color: theme.palette[color].contrastText,\n          backgroundColor: theme.palette[color].main,\n          ...sx,\n        }}\n        {...other}\n      >\n        {children}\n      </MUIAvatar>\n    );\n  }\n);\n\nexport default Avatar;\n"]},"metadata":{},"sourceType":"module"}