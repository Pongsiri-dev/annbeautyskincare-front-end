{"ast":null,"code":"var _jsxFileName = \"/Users/pongsiri.an/Downloads/Theme/Minimal_TypeScript_v2.7.0/full_version_TS/src/sections/@dashboard/kanban/KanbanTaskAttachments.tsx\";\nimport { findIndex, isString } from 'lodash';\nimport { useDropzone } from 'react-dropzone';\nimport { useState, useCallback } from 'react'; // @mui\n\nimport { alpha, styled } from '@mui/material/styles';\nimport { Box, IconButton } from '@mui/material'; // components\n\nimport Image from '../../../components/Image';\nimport Iconify from '../../../components/Iconify';\nimport LightboxModal from '../../../components/LightboxModal';\nimport { varFade } from '../../../components/animate'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DropZoneStyle = styled('div')(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    width: 64,\n    height: 64,\n    fontSize: 24,\n    display: 'flex',\n    cursor: 'pointer',\n    alignItems: 'center',\n    justifyContent: 'center',\n    margin: theme.spacing(0.5),\n    borderRadius: theme.shape.borderRadius,\n    border: `dashed 1px ${theme.palette.divider}`,\n    '&:hover': {\n      opacity: 0.72\n    }\n  };\n}); // ----------------------------------------------------------------------\n\nexport default function KanbanTaskAttachments(_ref2) {\n  let {\n    attachments\n  } = _ref2;\n  const [openLightbox, setOpenLightbox] = useState(false);\n  const [selectedImage, setSelectedImage] = useState(0);\n  const imagesLightbox = attachments;\n\n  const handleOpenLightbox = url => {\n    const selectedImage = findIndex(imagesLightbox, index => index === url);\n    setOpenLightbox(true);\n    setSelectedImage(selectedImage);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [attachments.map(attachment => /*#__PURE__*/_jsxDEV(Image, {\n      src: attachment,\n      onClick: () => handleOpenLightbox(attachment),\n      sx: {\n        m: 0.5,\n        width: 64,\n        height: 64,\n        borderRadius: 1,\n        cursor: 'pointer'\n      }\n    }, attachment, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(UploadFile, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LightboxModal, {\n      images: imagesLightbox,\n      mainSrc: imagesLightbox[selectedImage],\n      photoIndex: selectedImage,\n      setPhotoIndex: setSelectedImage,\n      isOpen: openLightbox,\n      onCloseRequest: () => setOpenLightbox(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n} // ----------------------------------------------------------------------\n\nfunction UploadFile() {\n  const [files, setFiles] = useState([]);\n\n  const handleRemove = file => {\n    const filteredItems = files.filter(_file => _file !== file);\n    setFiles(filteredItems);\n  };\n\n  const handleDrop = useCallback(acceptedFiles => {\n    setFiles(acceptedFiles.map(file => Object.assign(file, {\n      preview: URL.createObjectURL(file)\n    })));\n  }, [setFiles]);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop: handleDrop\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [files.map(file => {\n      const {\n        name,\n        preview\n      } = file;\n      const key = isString(file) ? file : name;\n      return /*#__PURE__*/_jsxDEV(Box, { ...varFade().inRight,\n        sx: {\n          p: 0,\n          m: 0.5,\n          width: 64,\n          height: 64,\n          borderRadius: 1,\n          overflow: 'hidden',\n          position: 'relative'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Image, {\n          src: isString(file) ? file : preview,\n          sx: {\n            height: 1,\n            position: 'absolute',\n            border: theme => `solid 1px ${theme.palette.divider}`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            top: 6,\n            right: 6,\n            position: 'absolute'\n          },\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            size: \"small\",\n            onClick: () => handleRemove(file),\n            sx: {\n              p: '2px',\n              color: 'common.white',\n              bgcolor: theme => alpha(theme.palette.grey[900], 0.72),\n              '&:hover': {\n                bgcolor: theme => alpha(theme.palette.grey[900], 0.48)\n              }\n            },\n            children: /*#__PURE__*/_jsxDEV(Iconify, {\n              icon: 'eva:close-fill'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this)]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(DropZoneStyle, { ...getRootProps(),\n      sx: { ...(isDragActive && {\n          opacity: 0.72\n        })\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Iconify, {\n        icon: 'eva:plus-fill',\n        sx: {\n          color: 'text.secondary'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}","map":{"version":3,"sources":["/Users/pongsiri.an/Downloads/Theme/Minimal_TypeScript_v2.7.0/full_version_TS/src/sections/@dashboard/kanban/KanbanTaskAttachments.tsx"],"names":["findIndex","isString","useDropzone","useState","useCallback","alpha","styled","Box","IconButton","Image","Iconify","LightboxModal","varFade","DropZoneStyle","theme","width","height","fontSize","display","cursor","alignItems","justifyContent","margin","spacing","borderRadius","shape","border","palette","divider","opacity","KanbanTaskAttachments","attachments","openLightbox","setOpenLightbox","selectedImage","setSelectedImage","imagesLightbox","handleOpenLightbox","url","index","map","attachment","m","UploadFile","files","setFiles","handleRemove","file","filteredItems","filter","_file","handleDrop","acceptedFiles","Object","assign","preview","URL","createObjectURL","getRootProps","getInputProps","isDragActive","onDrop","name","key","inRight","p","overflow","position","top","right","color","bgcolor","grey"],"mappings":"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","sourcesContent":["import { findIndex, isString } from 'lodash';\nimport { useDropzone } from 'react-dropzone';\nimport { useState, useCallback } from 'react';\n// @mui\nimport { alpha, styled } from '@mui/material/styles';\nimport { Box, IconButton } from '@mui/material';\n// components\nimport Image from '../../../components/Image';\nimport Iconify from '../../../components/Iconify';\nimport LightboxModal from '../../../components/LightboxModal';\nimport { varFade } from '../../../components/animate';\n\n// ----------------------------------------------------------------------\n\nconst DropZoneStyle = styled('div')(({ theme }) => ({\n  width: 64,\n  height: 64,\n  fontSize: 24,\n  display: 'flex',\n  cursor: 'pointer',\n  alignItems: 'center',\n  justifyContent: 'center',\n  margin: theme.spacing(0.5),\n  borderRadius: theme.shape.borderRadius,\n  border: `dashed 1px ${theme.palette.divider}`,\n  '&:hover': { opacity: 0.72 },\n}));\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  attachments: string[];\n};\n\nexport default function KanbanTaskAttachments({ attachments }: Props) {\n  const [openLightbox, setOpenLightbox] = useState(false);\n  const [selectedImage, setSelectedImage] = useState<number>(0);\n\n  const imagesLightbox = attachments;\n\n  const handleOpenLightbox = (url: string) => {\n    const selectedImage = findIndex(imagesLightbox, (index) => index === url);\n    setOpenLightbox(true);\n    setSelectedImage(selectedImage);\n  };\n\n  return (\n    <>\n      {attachments.map((attachment) => (\n        <Image\n          key={attachment}\n          src={attachment}\n          onClick={() => handleOpenLightbox(attachment)}\n          sx={{\n            m: 0.5,\n            width: 64,\n            height: 64,\n            borderRadius: 1,\n            cursor: 'pointer',\n          }}\n        />\n      ))}\n\n      <UploadFile />\n\n      <LightboxModal\n        images={imagesLightbox}\n        mainSrc={imagesLightbox[selectedImage]}\n        photoIndex={selectedImage}\n        setPhotoIndex={setSelectedImage}\n        isOpen={openLightbox}\n        onCloseRequest={() => setOpenLightbox(false)}\n      />\n    </>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nfunction UploadFile() {\n  const [files, setFiles] = useState([]);\n\n  const handleRemove = (file: File) => {\n    const filteredItems = files.filter((_file) => _file !== file);\n    setFiles(filteredItems);\n  };\n\n  const handleDrop = useCallback(\n    (acceptedFiles) => {\n      setFiles(\n        acceptedFiles.map((file: File) =>\n          Object.assign(file, {\n            preview: URL.createObjectURL(file),\n          })\n        )\n      );\n    },\n    [setFiles]\n  );\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop: handleDrop,\n  });\n\n  return (\n    <>\n      {files.map((file) => {\n        const { name, preview } = file;\n        const key = isString(file) ? file : name;\n\n        return (\n          <Box\n            key={key}\n            {...varFade().inRight}\n            sx={{\n              p: 0,\n              m: 0.5,\n              width: 64,\n              height: 64,\n              borderRadius: 1,\n              overflow: 'hidden',\n              position: 'relative',\n            }}\n          >\n            <Image\n              src={isString(file) ? file : preview}\n              sx={{\n                height: 1,\n                position: 'absolute',\n                border: (theme) => `solid 1px ${theme.palette.divider}`,\n              }}\n            />\n            <Box sx={{ top: 6, right: 6, position: 'absolute' }}>\n              <IconButton\n                size=\"small\"\n                onClick={() => handleRemove(file)}\n                sx={{\n                  p: '2px',\n                  color: 'common.white',\n                  bgcolor: (theme) => alpha(theme.palette.grey[900], 0.72),\n                  '&:hover': {\n                    bgcolor: (theme) => alpha(theme.palette.grey[900], 0.48),\n                  },\n                }}\n              >\n                <Iconify icon={'eva:close-fill'} />\n              </IconButton>\n            </Box>\n          </Box>\n        );\n      })}\n\n      <DropZoneStyle\n        {...getRootProps()}\n        sx={{\n          ...(isDragActive && { opacity: 0.72 }),\n        }}\n      >\n        <input {...getInputProps()} />\n\n        <Iconify icon={'eva:plus-fill'} sx={{ color: 'text.secondary' }} />\n      </DropZoneStyle>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}