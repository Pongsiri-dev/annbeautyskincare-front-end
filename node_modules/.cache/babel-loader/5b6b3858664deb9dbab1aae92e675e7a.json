{"ast":null,"code":"var _jsxFileName = \"/Users/pongsiri.an/Documents/GitHub/Valenta-front-end/src/components/Label.tsx\",\n    _s = $RefreshSig$();\n\n// @mui\nimport { alpha, useTheme, styled } from '@mui/material/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RootStyle = styled('span')(_ref => {\n  let {\n    theme,\n    ownerState\n  } = _ref;\n  const isLight = theme.palette.mode === 'light';\n  const {\n    color,\n    variant\n  } = ownerState;\n\n  const styleFilled = color => ({\n    color: theme.palette[color].contrastText,\n    backgroundColor: theme.palette[color].main\n  });\n\n  const styleOutlined = color => ({\n    color: theme.palette[color].main,\n    backgroundColor: 'transparent',\n    border: `1px solid ${theme.palette[color].main}`\n  });\n\n  const styleGhost = color => ({\n    color: theme.palette[color][isLight ? 'dark' : 'light'],\n    backgroundColor: alpha(theme.palette[color].main, 0.16)\n  });\n\n  return {\n    height: 22,\n    minWidth: 22,\n    lineHeight: 0,\n    borderRadius: 6,\n    cursor: 'default',\n    alignItems: 'center',\n    whiteSpace: 'nowrap',\n    display: 'inline-flex',\n    justifyContent: 'center',\n    padding: theme.spacing(0, 1),\n    color: theme.palette.grey[800],\n    fontSize: theme.typography.pxToRem(12),\n    fontFamily: theme.typography.fontFamily,\n    backgroundColor: theme.palette.grey[300],\n    fontWeight: theme.typography.fontWeightBold,\n    ...(color !== 'default' ? { ...(variant === 'filled' && { ...styleFilled(color)\n      }),\n      ...(variant === 'outlined' && { ...styleOutlined(color)\n      }),\n      ...(variant === 'ghost' && { ...styleGhost(color)\n      })\n    } : { ...(variant === 'outlined' && {\n        backgroundColor: 'transparent',\n        color: theme.palette.text.primary,\n        border: `1px solid ${theme.palette.grey[50032]}`\n      }),\n      ...(variant === 'ghost' && {\n        color: isLight ? theme.palette.text.secondary : theme.palette.common.white,\n        backgroundColor: theme.palette.grey[50016]\n      })\n    })\n  };\n}); // ----------------------------------------------------------------------\n\nexport default function Label(_ref2) {\n  _s();\n\n  let {\n    color = 'default',\n    variant = 'ghost',\n    children,\n    sx\n  } = _ref2;\n  const theme = useTheme();\n  return /*#__PURE__*/_jsxDEV(RootStyle, {\n    ownerState: {\n      color,\n      variant\n    },\n    sx: sx,\n    theme: theme,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Label, \"VrMvFCCB9Haniz3VCRPNUiCauHs=\", false, function () {\n  return [useTheme];\n});\n\n_c = Label;\n\nvar _c;\n\n$RefreshReg$(_c, \"Label\");","map":{"version":3,"sources":["/Users/pongsiri.an/Documents/GitHub/Valenta-front-end/src/components/Label.tsx"],"names":["alpha","useTheme","styled","RootStyle","theme","ownerState","isLight","palette","mode","color","variant","styleFilled","contrastText","backgroundColor","main","styleOutlined","border","styleGhost","height","minWidth","lineHeight","borderRadius","cursor","alignItems","whiteSpace","display","justifyContent","padding","spacing","grey","fontSize","typography","pxToRem","fontFamily","fontWeight","fontWeightBold","text","primary","secondary","common","white","Label","children","sx"],"mappings":"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","sourcesContent":["// @mui\nimport { alpha, Theme, useTheme, styled } from '@mui/material/styles';\nimport { BoxProps } from '@mui/material';\n// theme\nimport { ColorSchema } from '../theme/palette';\n\n// ----------------------------------------------------------------------\n\ntype LabelColor = 'default' | 'primary' | 'secondary' | 'info' | 'success' | 'warning' | 'error';\n\ntype LabelVariant = 'filled' | 'outlined' | 'ghost';\n\nconst RootStyle = styled('span')(\n  ({\n    theme,\n    ownerState,\n  }: {\n    theme: Theme;\n    ownerState: {\n      color: LabelColor;\n      variant: LabelVariant;\n    };\n  }) => {\n    const isLight = theme.palette.mode === 'light';\n    const { color, variant } = ownerState;\n\n    const styleFilled = (color: ColorSchema) => ({\n      color: theme.palette[color].contrastText,\n      backgroundColor: theme.palette[color].main,\n    });\n\n    const styleOutlined = (color: ColorSchema) => ({\n      color: theme.palette[color].main,\n      backgroundColor: 'transparent',\n      border: `1px solid ${theme.palette[color].main}`,\n    });\n\n    const styleGhost = (color: ColorSchema) => ({\n      color: theme.palette[color][isLight ? 'dark' : 'light'],\n      backgroundColor: alpha(theme.palette[color].main, 0.16),\n    });\n\n    return {\n      height: 22,\n      minWidth: 22,\n      lineHeight: 0,\n      borderRadius: 6,\n      cursor: 'default',\n      alignItems: 'center',\n      whiteSpace: 'nowrap',\n      display: 'inline-flex',\n      justifyContent: 'center',\n      padding: theme.spacing(0, 1),\n      color: theme.palette.grey[800],\n      fontSize: theme.typography.pxToRem(12),\n      fontFamily: theme.typography.fontFamily,\n      backgroundColor: theme.palette.grey[300],\n      fontWeight: theme.typography.fontWeightBold,\n\n      ...(color !== 'default'\n        ? {\n            ...(variant === 'filled' && { ...styleFilled(color) }),\n            ...(variant === 'outlined' && { ...styleOutlined(color) }),\n            ...(variant === 'ghost' && { ...styleGhost(color) }),\n          }\n        : {\n            ...(variant === 'outlined' && {\n              backgroundColor: 'transparent',\n              color: theme.palette.text.primary,\n              border: `1px solid ${theme.palette.grey[500_32]}`,\n            }),\n            ...(variant === 'ghost' && {\n              color: isLight ? theme.palette.text.secondary : theme.palette.common.white,\n              backgroundColor: theme.palette.grey[500_16],\n            }),\n          }),\n    };\n  }\n);\n\n// ----------------------------------------------------------------------\n\ninterface Props extends BoxProps {\n  color?: LabelColor;\n  variant?: LabelVariant;\n}\n\nexport default function Label({ color = 'default', variant = 'ghost', children, sx }: Props) {\n  const theme = useTheme();\n\n  return (\n    <RootStyle ownerState={{ color, variant }} sx={sx} theme={theme}>\n      {children}\n    </RootStyle>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}