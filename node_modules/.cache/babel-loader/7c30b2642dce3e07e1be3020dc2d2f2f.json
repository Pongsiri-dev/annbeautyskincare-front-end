{"ast":null,"code":"var _jsxFileName = \"/Users/pongsiri.an/Downloads/Theme/Minimal_TypeScript_v2.7.0/full_version_TS/src/components/EmojiPicker.tsx\";\nimport 'emoji-mart/css/emoji-mart.css';\nimport { Picker } from 'emoji-mart';\nimport { useState } from 'react'; // @mui\n\nimport { useTheme, styled } from '@mui/material/styles';\nimport { Box, IconButton, ClickAwayListener } from '@mui/material'; // utils\n\nimport cssStyles from '../utils/cssStyles'; //\n\nimport Iconify from './Iconify'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RootStyle = styled(Box)({\n  position: 'relative'\n});\nconst PickerStyle = styled('div')(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    bottom: 40,\n    overflow: 'hidden',\n    position: 'absolute',\n    left: theme.spacing(-2),\n    boxShadow: theme.customShadows.z20,\n    borderRadius: Number(theme.shape.borderRadius) * 2,\n    '& .emoji-mart': {\n      border: 'none',\n      backgroundColor: theme.palette.background.paper\n    },\n    '& .emoji-mart-anchor': {\n      color: theme.palette.text.disabled,\n      '&:hover, &:focus, &.emoji-mart-anchor-selected': {\n        color: theme.palette.text.primary\n      }\n    },\n    '& .emoji-mart-bar': {\n      borderColor: theme.palette.divider\n    },\n    '& .emoji-mart-search input': {\n      backgroundColor: 'transparent',\n      color: theme.palette.text.primary,\n      borderColor: theme.palette.grey[50032],\n      '&::placeholder': { ...theme.typography.body2,\n        color: theme.palette.text.disabled\n      }\n    },\n    '& .emoji-mart-search-icon svg': {\n      opacity: 1,\n      fill: theme.palette.text.disabled\n    },\n    '& .emoji-mart-category-label span': { ...theme.typography.subtitle2,\n      ...cssStyles().bgBlur({\n        color: theme.palette.background.paper\n      }),\n      color: theme.palette.text.primary\n    },\n    '& .emoji-mart-title-label': {\n      color: theme.palette.text.primary\n    },\n    '& .emoji-mart-category .emoji-mart-emoji:hover:before': {\n      backgroundColor: theme.palette.action.selected\n    },\n    '& .emoji-mart-emoji': {\n      outline: 'none'\n    },\n    '& .emoji-mart-preview-name': {\n      color: theme.palette.text.primary\n    },\n    '& .emoji-mart-preview-shortname, .emoji-mart-preview-emoticon': {\n      color: theme.palette.text.secondary\n    }\n  };\n}); // ----------------------------------------------------------------------\n\nexport default function EmojiPicker(_ref2) {\n  let {\n    disabled,\n    value,\n    setValue,\n    alignRight = false,\n    ...other\n  } = _ref2;\n  const theme = useTheme();\n  const [emojiPickerState, SetEmojiPicker] = useState(false);\n  let emojiPicker;\n\n  if (emojiPickerState) {\n    emojiPicker = /*#__PURE__*/_jsxDEV(Picker, {\n      color: theme.palette.primary.main,\n      title: \"Pick your emoji\\u2026\",\n      emoji: \"point_up\",\n      onSelect: emoji => setValue(value + (emoji === null || emoji === void 0 ? void 0 : emoji.native))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this);\n  }\n\n  const triggerPicker = event => {\n    event.preventDefault();\n    SetEmojiPicker(!emojiPickerState);\n  };\n\n  const handleClickAway = () => {\n    SetEmojiPicker(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ClickAwayListener, {\n    onClickAway: handleClickAway,\n    children: /*#__PURE__*/_jsxDEV(RootStyle, { ...other,\n      children: [/*#__PURE__*/_jsxDEV(PickerStyle, {\n        sx: { ...(alignRight && {\n            right: -2,\n            left: 'auto !important'\n          })\n        },\n        children: emojiPicker\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        disabled: disabled,\n        size: \"small\",\n        onClick: triggerPicker,\n        children: /*#__PURE__*/_jsxDEV(Iconify, {\n          icon: 'eva:smiling-face-fill',\n          width: 20,\n          height: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/pongsiri.an/Downloads/Theme/Minimal_TypeScript_v2.7.0/full_version_TS/src/components/EmojiPicker.tsx"],"names":["Picker","useState","useTheme","styled","Box","IconButton","ClickAwayListener","cssStyles","Iconify","RootStyle","position","PickerStyle","theme","bottom","overflow","left","spacing","boxShadow","customShadows","z20","borderRadius","Number","shape","border","backgroundColor","palette","background","paper","color","text","disabled","primary","borderColor","divider","grey","typography","body2","opacity","fill","subtitle2","bgBlur","action","selected","outline","secondary","EmojiPicker","value","setValue","alignRight","other","emojiPickerState","SetEmojiPicker","emojiPicker","main","emoji","native","triggerPicker","event","preventDefault","handleClickAway","right"],"mappings":"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","sourcesContent":["import 'emoji-mart/css/emoji-mart.css';\nimport { BaseEmoji, Picker } from 'emoji-mart';\nimport { useState } from 'react';\n// @mui\nimport { useTheme, styled } from '@mui/material/styles';\nimport { Box, IconButton, ClickAwayListener, BoxProps } from '@mui/material';\n// utils\nimport cssStyles from '../utils/cssStyles';\n//\nimport Iconify from './Iconify';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled(Box)({\n  position: 'relative',\n});\n\nconst PickerStyle = styled('div')(({ theme }) => ({\n  bottom: 40,\n  overflow: 'hidden',\n  position: 'absolute',\n  left: theme.spacing(-2),\n  boxShadow: theme.customShadows.z20,\n  borderRadius: Number(theme.shape.borderRadius) * 2,\n  '& .emoji-mart': {\n    border: 'none',\n    backgroundColor: theme.palette.background.paper,\n  },\n  '& .emoji-mart-anchor': {\n    color: theme.palette.text.disabled,\n    '&:hover, &:focus, &.emoji-mart-anchor-selected': {\n      color: theme.palette.text.primary,\n    },\n  },\n  '& .emoji-mart-bar': { borderColor: theme.palette.divider },\n  '& .emoji-mart-search input': {\n    backgroundColor: 'transparent',\n    color: theme.palette.text.primary,\n    borderColor: theme.palette.grey[500_32],\n    '&::placeholder': {\n      ...theme.typography.body2,\n      color: theme.palette.text.disabled,\n    },\n  },\n  '& .emoji-mart-search-icon svg': {\n    opacity: 1,\n    fill: theme.palette.text.disabled,\n  },\n  '& .emoji-mart-category-label span': {\n    ...theme.typography.subtitle2,\n    ...cssStyles().bgBlur({ color: theme.palette.background.paper }),\n    color: theme.palette.text.primary,\n  },\n  '& .emoji-mart-title-label': { color: theme.palette.text.primary },\n  '& .emoji-mart-category .emoji-mart-emoji:hover:before': {\n    backgroundColor: theme.palette.action.selected,\n  },\n  '& .emoji-mart-emoji': { outline: 'none' },\n  '& .emoji-mart-preview-name': {\n    color: theme.palette.text.primary,\n  },\n  '& .emoji-mart-preview-shortname, .emoji-mart-preview-emoticon': {\n    color: theme.palette.text.secondary,\n  },\n}));\n\n// ----------------------------------------------------------------------\n\ninterface EmoijPickerProps extends BoxProps {\n  disabled?: boolean;\n  value: string;\n  setValue: (value: string) => void;\n  alignRight?: boolean;\n}\n\nexport default function EmojiPicker({\n  disabled,\n  value,\n  setValue,\n  alignRight = false,\n  ...other\n}: EmoijPickerProps) {\n  const theme = useTheme();\n  const [emojiPickerState, SetEmojiPicker] = useState(false);\n\n  let emojiPicker;\n  if (emojiPickerState) {\n    emojiPicker = (\n      <Picker\n        color={theme.palette.primary.main}\n        title=\"Pick your emoji…\"\n        emoji=\"point_up\"\n        onSelect={(emoji: BaseEmoji) => setValue(value + emoji?.native)}\n      />\n    );\n  }\n\n  const triggerPicker = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    event.preventDefault();\n    SetEmojiPicker(!emojiPickerState);\n  };\n\n  const handleClickAway = () => {\n    SetEmojiPicker(false);\n  };\n\n  return (\n    <ClickAwayListener onClickAway={handleClickAway}>\n      <RootStyle {...other}>\n        <PickerStyle\n          sx={{\n            ...(alignRight && {\n              right: -2,\n              left: 'auto !important',\n            }),\n          }}\n        >\n          {emojiPicker}\n        </PickerStyle>\n        <IconButton disabled={disabled} size=\"small\" onClick={triggerPicker}>\n          <Iconify icon={'eva:smiling-face-fill'} width={20} height={20} />\n        </IconButton>\n      </RootStyle>\n    </ClickAwayListener>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}