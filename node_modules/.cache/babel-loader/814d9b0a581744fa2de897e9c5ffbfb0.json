{"ast":null,"code":"var _jsxFileName = \"/Users/pongsiri.an/Documents/GitHub/Valenta-front-end/src/components/ColorPreview.tsx\";\n// @mui\nimport { alpha, styled } from '@mui/material/styles';\nimport { Box, Typography } from '@mui/material'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RootStyle = styled(Box)(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end'\n  };\n});\nconst IconStyle = styled('div')(_ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return {\n    marginLeft: -4,\n    borderRadius: '50%',\n    width: theme.spacing(2),\n    height: theme.spacing(2),\n    border: `solid 2px ${theme.palette.background.paper}`,\n    boxShadow: `inset -1px 1px 2px ${alpha(theme.palette.common.black, 0.24)}`\n  };\n}); // ----------------------------------------------------------------------\n\nexport default function ColorPreview(_ref3) {\n  let {\n    colors,\n    limit = 3,\n    sx\n  } = _ref3;\n  const showColor = colors.slice(0, limit);\n  const moreColor = colors.length - limit;\n  return /*#__PURE__*/_jsxDEV(RootStyle, {\n    component: \"span\",\n    sx: sx,\n    children: [showColor.map((color, index) => /*#__PURE__*/_jsxDEV(IconStyle, {\n      sx: {\n        bgcolor: color\n      }\n    }, color + index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)), colors.length > limit && /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"subtitle2\",\n      children: `+${moreColor}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 33\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_c = ColorPreview;\n\nvar _c;\n\n$RefreshReg$(_c, \"ColorPreview\");","map":{"version":3,"sources":["/Users/pongsiri.an/Documents/GitHub/Valenta-front-end/src/components/ColorPreview.tsx"],"names":["alpha","styled","Box","Typography","RootStyle","theme","display","alignItems","justifyContent","IconStyle","marginLeft","borderRadius","width","spacing","height","border","palette","background","paper","boxShadow","common","black","ColorPreview","colors","limit","sx","showColor","slice","moreColor","length","map","color","index","bgcolor"],"mappings":";AAAA;AACA,SAASA,KAAT,EAAgBC,MAAhB,QAA8B,sBAA9B;AACA,SAASC,GAAT,EAAcC,UAAd,QAA0C,eAA1C,C,CAEA;;;AAEA,MAAMC,SAAS,GAAGH,MAAM,CAACC,GAAD,CAAN,CAAY;AAAA,MAAC;AAAEG,IAAAA;AAAF,GAAD;AAAA,SAAgB;AAC5CC,IAAAA,OAAO,EAAE,MADmC;AAE5CC,IAAAA,UAAU,EAAE,QAFgC;AAG5CC,IAAAA,cAAc,EAAE;AAH4B,GAAhB;AAAA,CAAZ,CAAlB;AAMA,MAAMC,SAAS,GAAGR,MAAM,CAAC,KAAD,CAAN,CAAc;AAAA,MAAC;AAAEI,IAAAA;AAAF,GAAD;AAAA,SAAgB;AAC9CK,IAAAA,UAAU,EAAE,CAAC,CADiC;AAE9CC,IAAAA,YAAY,EAAE,KAFgC;AAG9CC,IAAAA,KAAK,EAAEP,KAAK,CAACQ,OAAN,CAAc,CAAd,CAHuC;AAI9CC,IAAAA,MAAM,EAAET,KAAK,CAACQ,OAAN,CAAc,CAAd,CAJsC;AAK9CE,IAAAA,MAAM,EAAG,aAAYV,KAAK,CAACW,OAAN,CAAcC,UAAd,CAAyBC,KAAM,EALN;AAM9CC,IAAAA,SAAS,EAAG,sBAAqBnB,KAAK,CAACK,KAAK,CAACW,OAAN,CAAcI,MAAd,CAAqBC,KAAtB,EAA6B,IAA7B,CAAmC;AAN3B,GAAhB;AAAA,CAAd,CAAlB,C,CASA;;AAOA,eAAe,SAASC,YAAT,QAAwD;AAAA,MAAlC;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,KAAK,GAAG,CAAlB;AAAqBC,IAAAA;AAArB,GAAkC;AACrE,QAAMC,SAAS,GAAGH,MAAM,CAACI,KAAP,CAAa,CAAb,EAAgBH,KAAhB,CAAlB;AACA,QAAMI,SAAS,GAAGL,MAAM,CAACM,MAAP,GAAgBL,KAAlC;AAEA,sBACE,QAAC,SAAD;AAAW,IAAA,SAAS,EAAC,MAArB;AAA4B,IAAA,EAAE,EAAEC,EAAhC;AAAA,eACGC,SAAS,CAACI,GAAV,CAAc,CAACC,KAAD,EAAQC,KAAR,kBACb,QAAC,SAAD;AAA+B,MAAA,EAAE,EAAE;AAAEC,QAAAA,OAAO,EAAEF;AAAX;AAAnC,OAAgBA,KAAK,GAAGC,KAAxB;AAAA;AAAA;AAAA;AAAA,YADD,CADH,EAKGT,MAAM,CAACM,MAAP,GAAgBL,KAAhB,iBAAyB,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,WAApB;AAAA,gBAAkC,IAAGI,SAAU;AAA/C;AAAA;AAAA;AAAA;AAAA,YAL5B;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;KAbuBN,Y","sourcesContent":["// @mui\nimport { alpha, styled } from '@mui/material/styles';\nimport { Box, Typography, BoxProps } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'flex-end'\n}));\n\nconst IconStyle = styled('div')(({ theme }) => ({\n  marginLeft: -4,\n  borderRadius: '50%',\n  width: theme.spacing(2),\n  height: theme.spacing(2),\n  border: `solid 2px ${theme.palette.background.paper}`,\n  boxShadow: `inset -1px 1px 2px ${alpha(theme.palette.common.black, 0.24)}`\n}));\n\n// ----------------------------------------------------------------------\n\ninterface Props extends BoxProps {\n  colors: string[];\n  limit?: number;\n}\n\nexport default function ColorPreview({ colors, limit = 3, sx }: Props) {\n  const showColor = colors.slice(0, limit);\n  const moreColor = colors.length - limit;\n\n  return (\n    <RootStyle component=\"span\" sx={sx}>\n      {showColor.map((color, index) => (\n        <IconStyle key={color + index} sx={{ bgcolor: color }} />\n      ))}\n\n      {colors.length > limit && <Typography variant=\"subtitle2\">{`+${moreColor}`}</Typography>}\n    </RootStyle>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}