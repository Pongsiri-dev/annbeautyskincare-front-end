{"ast":null,"code":"var _jsxFileName = \"/Users/pongsiri.an/Documents/GitHub/Valenta-front-end/src/pages/dashboard/Mail.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom'; // @mui\n\nimport { Container, Card } from '@mui/material'; // redux\n\nimport { useDispatch } from '../../redux/store';\nimport { getLabels } from '../../redux/slices/mail'; // routes\n\nimport { PATH_DASHBOARD } from '../../routes/paths'; // hooks\n\nimport useSettings from '../../hooks/useSettings'; // components\n\nimport Page from '../../components/Page';\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs'; // sections\n\nimport { MailList, MailDetails, MailSidebar, MailCompose } from '../../sections/@dashboard/mail'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Mail() {\n  _s();\n\n  const {\n    themeStretch\n  } = useSettings();\n  const dispatch = useDispatch();\n  const {\n    mailId\n  } = useParams();\n  const [openSidebar, setOpenSidebar] = useState(false);\n  const [openCompose, setOpenCompose] = useState(false);\n  useEffect(() => {\n    dispatch(getLabels());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(Page, {\n    title: \"Mail\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: themeStretch ? false : 'xl',\n      children: [/*#__PURE__*/_jsxDEV(HeaderBreadcrumbs, {\n        heading: \"Mail\",\n        links: [{\n          name: 'Dashboard',\n          href: PATH_DASHBOARD.root\n        }, {\n          name: 'Mail'\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          minHeight: 480,\n          height: {\n            md: '72vh'\n          },\n          display: {\n            md: 'flex'\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(MailSidebar, {\n          isOpenSidebar: openSidebar,\n          onCloseSidebar: () => setOpenSidebar(false),\n          onOpenCompose: () => setOpenCompose(true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), mailId ? /*#__PURE__*/_jsxDEV(MailDetails, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(MailList, {\n          onOpenSidebar: () => setOpenSidebar(true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 39\n        }, this), /*#__PURE__*/_jsxDEV(MailCompose, {\n          isOpenCompose: openCompose,\n          onCloseCompose: () => setOpenCompose(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Mail, \"j4GVaaWmjov+SVoUCYR1Fl1jYcg=\", false, function () {\n  return [useSettings, useDispatch, useParams];\n});\n\n_c = Mail;\n\nvar _c;\n\n$RefreshReg$(_c, \"Mail\");","map":{"version":3,"sources":["/Users/pongsiri.an/Documents/GitHub/Valenta-front-end/src/pages/dashboard/Mail.tsx"],"names":["useEffect","useState","useParams","Container","Card","useDispatch","getLabels","PATH_DASHBOARD","useSettings","Page","HeaderBreadcrumbs","MailList","MailDetails","MailSidebar","MailCompose","Mail","themeStretch","dispatch","mailId","openSidebar","setOpenSidebar","openCompose","setOpenCompose","name","href","root","minHeight","height","md","display"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,kBAA1B,C,CACA;;AACA,SAASC,SAAT,EAAoBC,IAApB,QAAgC,eAAhC,C,CACA;;AACA,SAASC,WAAT,QAA4B,mBAA5B;AACA,SAASC,SAAT,QAA0B,yBAA1B,C,CACA;;AACA,SAASC,cAAT,QAA+B,oBAA/B,C,CACA;;AACA,OAAOC,WAAP,MAAwB,yBAAxB,C,CACA;;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,iBAAP,MAA8B,oCAA9B,C,CACA;;AACA,SAASC,QAAT,EAAmBC,WAAnB,EAAgCC,WAAhC,EAA6CC,WAA7C,QAAgE,gCAAhE,C,CAEA;;;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAC7B,QAAM;AAAEC,IAAAA;AAAF,MAAmBR,WAAW,EAApC;AACA,QAAMS,QAAQ,GAAGZ,WAAW,EAA5B;AACA,QAAM;AAAEa,IAAAA;AAAF,MAAahB,SAAS,EAA5B;AACA,QAAM,CAACiB,WAAD,EAAcC,cAAd,IAAgCnB,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACoB,WAAD,EAAcC,cAAd,IAAgCrB,QAAQ,CAAC,KAAD,CAA9C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,QAAQ,CAACX,SAAS,EAAV,CAAR;AACD,GAFQ,EAEN,CAACW,QAAD,CAFM,CAAT;AAIA,sBACE,QAAC,IAAD;AAAM,IAAA,KAAK,EAAC,MAAZ;AAAA,2BACE,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAED,YAAY,GAAG,KAAH,GAAW,IAA5C;AAAA,8BACE,QAAC,iBAAD;AACE,QAAA,OAAO,EAAC,MADV;AAEE,QAAA,KAAK,EAAE,CACL;AACEO,UAAAA,IAAI,EAAE,WADR;AAEEC,UAAAA,IAAI,EAAEjB,cAAc,CAACkB;AAFvB,SADK,EAKL;AAAEF,UAAAA,IAAI,EAAE;AAAR,SALK;AAFT;AAAA;AAAA;AAAA;AAAA,cADF,eAWE,QAAC,IAAD;AACE,QAAA,EAAE,EAAE;AACFG,UAAAA,SAAS,EAAE,GADT;AAEFC,UAAAA,MAAM,EAAE;AAAEC,YAAAA,EAAE,EAAE;AAAN,WAFN;AAGFC,UAAAA,OAAO,EAAE;AAAED,YAAAA,EAAE,EAAE;AAAN;AAHP,SADN;AAAA,gCAOE,QAAC,WAAD;AACE,UAAA,aAAa,EAAET,WADjB;AAEE,UAAA,cAAc,EAAE,MAAMC,cAAc,CAAC,KAAD,CAFtC;AAGE,UAAA,aAAa,EAAE,MAAME,cAAc,CAAC,IAAD;AAHrC;AAAA;AAAA;AAAA;AAAA,gBAPF,EAYGJ,MAAM,gBAAG,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,gBAAH,gBAAqB,QAAC,QAAD;AAAU,UAAA,aAAa,EAAE,MAAME,cAAc,CAAC,IAAD;AAA7C;AAAA;AAAA;AAAA;AAAA,gBAZ9B,eAaE,QAAC,WAAD;AAAa,UAAA,aAAa,EAAEC,WAA5B;AAAyC,UAAA,cAAc,EAAE,MAAMC,cAAc,CAAC,KAAD;AAA7E;AAAA;AAAA;AAAA;AAAA,gBAbF;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD;;GA1CuBP,I;UACGP,W,EACRH,W,EACEH,S;;;KAHGa,I","sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n// @mui\nimport { Container, Card } from '@mui/material';\n// redux\nimport { useDispatch } from '../../redux/store';\nimport { getLabels } from '../../redux/slices/mail';\n// routes\nimport { PATH_DASHBOARD } from '../../routes/paths';\n// hooks\nimport useSettings from '../../hooks/useSettings';\n// components\nimport Page from '../../components/Page';\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\n// sections\nimport { MailList, MailDetails, MailSidebar, MailCompose } from '../../sections/@dashboard/mail';\n\n// ----------------------------------------------------------------------\n\nexport default function Mail() {\n  const { themeStretch } = useSettings();\n  const dispatch = useDispatch();\n  const { mailId } = useParams();\n  const [openSidebar, setOpenSidebar] = useState(false);\n  const [openCompose, setOpenCompose] = useState(false);\n\n  useEffect(() => {\n    dispatch(getLabels());\n  }, [dispatch]);\n\n  return (\n    <Page title=\"Mail\">\n      <Container maxWidth={themeStretch ? false : 'xl'}>\n        <HeaderBreadcrumbs\n          heading=\"Mail\"\n          links={[\n            {\n              name: 'Dashboard',\n              href: PATH_DASHBOARD.root,\n            },\n            { name: 'Mail' },\n          ]}\n        />\n        <Card\n          sx={{\n            minHeight: 480,\n            height: { md: '72vh' },\n            display: { md: 'flex' },\n          }}\n        >\n          <MailSidebar\n            isOpenSidebar={openSidebar}\n            onCloseSidebar={() => setOpenSidebar(false)}\n            onOpenCompose={() => setOpenCompose(true)}\n          />\n          {mailId ? <MailDetails /> : <MailList onOpenSidebar={() => setOpenSidebar(true)} />}\n          <MailCompose isOpenCompose={openCompose} onCloseCompose={() => setOpenCompose(false)} />\n        </Card>\n      </Container>\n    </Page>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}