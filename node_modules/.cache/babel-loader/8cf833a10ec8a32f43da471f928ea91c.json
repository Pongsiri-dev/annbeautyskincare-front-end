{"ast":null,"code":"var _jsxFileName = \"/Users/pongsiri.an/Documents/GitHub/Valenta-front-end/src/sections/@dashboard/e-commerce/checkout/CheckoutNewAddressForm.tsx\",\n    _s = $RefreshSig$();\n\nimport * as Yup from 'yup';\nimport { useFormik, Form, FormikProvider } from 'formik'; // @mui\n\nimport { Grid, Radio, Dialog, Button, Divider, Checkbox, TextField, RadioGroup, DialogTitle, DialogContent, DialogActions, FormControlLabel } from '@mui/material';\nimport { LoadingButton } from '@mui/lab'; // @types\n\n// _mock\nimport { countries } from '../../../../_mock'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CheckoutNewAddressForm(_ref) {\n  _s();\n\n  let {\n    open,\n    onClose,\n    onNextStep,\n    onCreateBilling\n  } = _ref;\n  const NewAddressSchema = Yup.object().shape({\n    receiver: Yup.string().required('Fullname is required'),\n    phone: Yup.string().required('Phone is required'),\n    address: Yup.string().required('Address is required'),\n    city: Yup.string().required('City is required'),\n    state: Yup.string().required('State is required'),\n    country: Yup.string().required('State is required')\n  });\n  const formik = useFormik({\n    initialValues: {\n      addressType: 'Home',\n      receiver: '',\n      phone: '',\n      address: '',\n      city: '',\n      state: '',\n      country: countries[0].label,\n      zipcode: '',\n      isDefault: true\n    },\n    validationSchema: NewAddressSchema,\n    onSubmit: async (values, _ref2) => {\n      let {\n        setSubmitting\n      } = _ref2;\n\n      try {\n        onNextStep();\n        setSubmitting(true);\n        onCreateBilling({\n          receiver: values.receiver,\n          phone: values.phone,\n          fullAddress: `${values.address}, ${values.city}, ${values.state}, ${values.country}, ${values.zipcode}`,\n          addressType: values.addressType,\n          isDefault: values.isDefault\n        });\n      } catch (error) {\n        console.error(error);\n        setSubmitting(false);\n      }\n    }\n  });\n  const {\n    errors,\n    values,\n    touched,\n    isSubmitting,\n    handleSubmit,\n    getFieldProps\n  } = formik;\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    fullWidth: true,\n    maxWidth: \"sm\",\n    open: open,\n    onClose: onClose,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: \"Add new address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormikProvider, {\n      value: formik,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        autoComplete: \"off\",\n        noValidate: true,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(DialogContent, {\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 3,\n            direction: \"column\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(RadioGroup, {\n                row: true,\n                ...getFieldProps('addressType'),\n                children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                  value: \"Home\",\n                  control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 90,\n                    columnNumber: 59\n                  }, this),\n                  label: \"Home\",\n                  sx: {\n                    mr: 2\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                  value: \"Office\",\n                  control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 91,\n                    columnNumber: 61\n                  }, this),\n                  label: \"Office\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 2,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 6,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    label: \"Full Name\",\n                    ...getFieldProps('receiver'),\n                    error: Boolean(touched.receiver && errors.receiver),\n                    helperText: touched.receiver && errors.receiver\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 6,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    label: \"Phone Number\",\n                    ...getFieldProps('phone'),\n                    error: Boolean(touched.phone && errors.phone),\n                    helperText: touched.phone && errors.phone\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 108,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: \"Address\",\n                ...getFieldProps('address'),\n                error: Boolean(touched.address && errors.address),\n                helperText: touched.address && errors.address\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 2,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 4,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    label: \"Town / City\",\n                    ...getFieldProps('city'),\n                    error: Boolean(touched.city && errors.city),\n                    helperText: touched.city && errors.city\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 132,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 4,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    label: \"State\",\n                    ...getFieldProps('state'),\n                    error: Boolean(touched.state && errors.state),\n                    helperText: touched.state && errors.state\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 141,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 4,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    label: \"Zip / Postal Code\",\n                    ...getFieldProps('zipcode'),\n                    error: Boolean(touched.zipcode && errors.zipcode),\n                    helperText: touched.zipcode && errors.zipcode\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 150,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                select: true,\n                fullWidth: true,\n                label: \"Country\",\n                placeholder: \"Country\",\n                ...getFieldProps('country'),\n                SelectProps: {\n                  native: true\n                },\n                error: Boolean(touched.country && errors.country),\n                helperText: touched.country && errors.country,\n                children: countries.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: option.label,\n                  children: option.label\n                }, option.code, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                  checked: values.isDefault,\n                  ...getFieldProps('isDefault')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 28\n                }, this),\n                label: \"Use this address as default.\",\n                sx: {\n                  mt: 3\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(LoadingButton, {\n            type: \"submit\",\n            variant: \"contained\",\n            loading: isSubmitting,\n            children: \"Deliver to this Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\",\n            color: \"inherit\",\n            variant: \"outlined\",\n            onClick: onClose,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CheckoutNewAddressForm, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = CheckoutNewAddressForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckoutNewAddressForm\");","map":{"version":3,"sources":["/Users/pongsiri.an/Documents/GitHub/Valenta-front-end/src/sections/@dashboard/e-commerce/checkout/CheckoutNewAddressForm.tsx"],"names":["Yup","useFormik","Form","FormikProvider","Grid","Radio","Dialog","Button","Divider","Checkbox","TextField","RadioGroup","DialogTitle","DialogContent","DialogActions","FormControlLabel","LoadingButton","countries","CheckoutNewAddressForm","open","onClose","onNextStep","onCreateBilling","NewAddressSchema","object","shape","receiver","string","required","phone","address","city","state","country","formik","initialValues","addressType","label","zipcode","isDefault","validationSchema","onSubmit","values","setSubmitting","fullAddress","error","console","errors","touched","isSubmitting","handleSubmit","getFieldProps","mr","Boolean","native","map","option","code","mt"],"mappings":"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","sourcesContent":["import * as Yup from 'yup';\nimport { useFormik, Form, FormikProvider } from 'formik';\n// @mui\nimport {\n  Grid,\n  Radio,\n  Dialog,\n  Button,\n  Divider,\n  Checkbox,\n  TextField,\n  RadioGroup,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  FormControlLabel,\n} from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\n// @types\nimport { OnCreateBilling } from '../../../../@types/product';\n// _mock\nimport { countries } from '../../../../_mock';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  open: boolean;\n  onClose: VoidFunction;\n  onNextStep: VoidFunction;\n  onCreateBilling: OnCreateBilling;\n};\n\nexport default function CheckoutNewAddressForm({\n  open,\n  onClose,\n  onNextStep,\n  onCreateBilling,\n}: Props) {\n  const NewAddressSchema = Yup.object().shape({\n    receiver: Yup.string().required('Fullname is required'),\n    phone: Yup.string().required('Phone is required'),\n    address: Yup.string().required('Address is required'),\n    city: Yup.string().required('City is required'),\n    state: Yup.string().required('State is required'),\n    country: Yup.string().required('State is required'),\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      addressType: 'Home',\n      receiver: '',\n      phone: '',\n      address: '',\n      city: '',\n      state: '',\n      country: countries[0].label,\n      zipcode: '',\n      isDefault: true,\n    },\n    validationSchema: NewAddressSchema,\n    onSubmit: async (values, { setSubmitting }) => {\n      try {\n        onNextStep();\n        setSubmitting(true);\n        onCreateBilling({\n          receiver: values.receiver,\n          phone: values.phone,\n          fullAddress: `${values.address}, ${values.city}, ${values.state}, ${values.country}, ${values.zipcode}`,\n          addressType: values.addressType,\n          isDefault: values.isDefault,\n        });\n      } catch (error) {\n        console.error(error);\n        setSubmitting(false);\n      }\n    },\n  });\n\n  const { errors, values, touched, isSubmitting, handleSubmit, getFieldProps } = formik;\n\n  return (\n    <Dialog fullWidth maxWidth=\"sm\" open={open} onClose={onClose}>\n      <DialogTitle>Add new address</DialogTitle>\n      <FormikProvider value={formik}>\n        <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\n          <DialogContent>\n            <Grid container spacing={3} direction=\"column\">\n              <Grid item>\n                <RadioGroup row {...getFieldProps('addressType')}>\n                  <FormControlLabel value=\"Home\" control={<Radio />} label=\"Home\" sx={{ mr: 2 }} />\n                  <FormControlLabel value=\"Office\" control={<Radio />} label=\"Office\" />\n                </RadioGroup>\n              </Grid>\n\n              <Grid item>\n                <Grid container spacing={2}>\n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      fullWidth\n                      label=\"Full Name\"\n                      {...getFieldProps('receiver')}\n                      error={Boolean(touched.receiver && errors.receiver)}\n                      helperText={touched.receiver && errors.receiver}\n                    />\n                  </Grid>\n\n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      fullWidth\n                      label=\"Phone Number\"\n                      {...getFieldProps('phone')}\n                      error={Boolean(touched.phone && errors.phone)}\n                      helperText={touched.phone && errors.phone}\n                    />\n                  </Grid>\n                </Grid>\n              </Grid>\n\n              <Grid item>\n                <TextField\n                  fullWidth\n                  label=\"Address\"\n                  {...getFieldProps('address')}\n                  error={Boolean(touched.address && errors.address)}\n                  helperText={touched.address && errors.address}\n                />\n              </Grid>\n\n              <Grid item>\n                <Grid container spacing={2}>\n                  <Grid item xs={12} sm={4}>\n                    <TextField\n                      fullWidth\n                      label=\"Town / City\"\n                      {...getFieldProps('city')}\n                      error={Boolean(touched.city && errors.city)}\n                      helperText={touched.city && errors.city}\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={4}>\n                    <TextField\n                      fullWidth\n                      label=\"State\"\n                      {...getFieldProps('state')}\n                      error={Boolean(touched.state && errors.state)}\n                      helperText={touched.state && errors.state}\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={4}>\n                    <TextField\n                      fullWidth\n                      label=\"Zip / Postal Code\"\n                      {...getFieldProps('zipcode')}\n                      error={Boolean(touched.zipcode && errors.zipcode)}\n                      helperText={touched.zipcode && errors.zipcode}\n                    />\n                  </Grid>\n                </Grid>\n              </Grid>\n\n              <Grid item>\n                <TextField\n                  select\n                  fullWidth\n                  label=\"Country\"\n                  placeholder=\"Country\"\n                  {...getFieldProps('country')}\n                  SelectProps={{ native: true }}\n                  error={Boolean(touched.country && errors.country)}\n                  helperText={touched.country && errors.country}\n                >\n                  {countries.map((option) => (\n                    <option key={option.code} value={option.label}>\n                      {option.label}\n                    </option>\n                  ))}\n                </TextField>\n\n                <FormControlLabel\n                  control={<Checkbox checked={values.isDefault} {...getFieldProps('isDefault')} />}\n                  label=\"Use this address as default.\"\n                  sx={{ mt: 3 }}\n                />\n              </Grid>\n            </Grid>\n          </DialogContent>\n\n          <Divider />\n\n          <DialogActions>\n            <LoadingButton type=\"submit\" variant=\"contained\" loading={isSubmitting}>\n              Deliver to this Address\n            </LoadingButton>\n            <Button type=\"button\" color=\"inherit\" variant=\"outlined\" onClick={onClose}>\n              Cancel\n            </Button>\n          </DialogActions>\n        </Form>\n      </FormikProvider>\n    </Dialog>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}