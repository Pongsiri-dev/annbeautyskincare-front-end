{"ast":null,"code":"var _jsxFileName = \"/Users/pongsiri.an/Downloads/Theme/Minimal_TypeScript_v2.7.0/full_version_TS/src/sections/@dashboard/e-commerce/ProductNewForm.tsx\";\nimport * as Yup from 'yup';\nimport { useSnackbar } from 'notistack';\nimport { useNavigate } from 'react-router-dom';\nimport { useCallback } from 'react';\nimport { Form, FormikProvider, useFormik } from 'formik'; // @mui\n\nimport { styled } from '@mui/material/styles';\nimport { LoadingButton } from '@mui/lab';\nimport { Card, Chip, Grid, Stack, Radio, Switch, Select, TextField, InputLabel, Typography, RadioGroup, FormControl, Autocomplete, InputAdornment, FormHelperText, FormControlLabel } from '@mui/material'; // hooks\n\nimport useIsMountedRef from '../../../hooks/useIsMountedRef'; // routes\n\nimport { PATH_DASHBOARD } from '../../../routes/paths'; // @types\n\n//\nimport Editor from '../../../components/editor';\nimport { UploadMultiFile } from '../../../components/upload'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nconst GENDER_OPTION = ['Men', 'Women', 'Kids'];\nconst CATEGORY_OPTION = [{\n  group: 'Clothing',\n  classify: ['Shirts', 'T-shirts', 'Jeans', 'Leather']\n}, {\n  group: 'Tailored',\n  classify: ['Suits', 'Blazers', 'Trousers', 'Waistcoats']\n}, {\n  group: 'Accessories',\n  classify: ['Shoes', 'Backpacks and bags', 'Bracelets', 'Face masks']\n}];\nconst TAGS_OPTION = ['Toy Story 3', 'Logan', 'Full Metal Jacket', 'Dangal', 'The Sting', '2001: A Space Odyssey', \"Singin' in the Rain\", 'Toy Story', 'Bicycle Thieves', 'The Kid', 'Inglourious Basterds', 'Snatch', '3 Idiots'];\nconst LabelStyle = styled(Typography)(_ref => {\n  let {\n    theme\n  } = _ref;\n  return { ...theme.typography.subtitle2,\n    color: theme.palette.text.secondary,\n    marginBottom: theme.spacing(1)\n  };\n}); // ----------------------------------------------------------------------\n\nexport default function ProductNewForm(_ref2) {\n  let {\n    isEdit,\n    currentProduct\n  } = _ref2;\n  const navigate = useNavigate();\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const isMountedRef = useIsMountedRef();\n  const NewProductSchema = Yup.object().shape({\n    name: Yup.string().required('Name is required'),\n    description: Yup.string().required('Description is required'),\n    images: Yup.array().min(1, 'Images is required'),\n    price: Yup.number().required('Price is required')\n  });\n  const formik = useFormik({\n    enableReinitialize: true,\n    initialValues: {\n      name: (currentProduct === null || currentProduct === void 0 ? void 0 : currentProduct.name) || '',\n      description: (currentProduct === null || currentProduct === void 0 ? void 0 : currentProduct.description) || '',\n      images: (currentProduct === null || currentProduct === void 0 ? void 0 : currentProduct.images) || [],\n      code: (currentProduct === null || currentProduct === void 0 ? void 0 : currentProduct.code) || '',\n      sku: (currentProduct === null || currentProduct === void 0 ? void 0 : currentProduct.sku) || '',\n      price: (currentProduct === null || currentProduct === void 0 ? void 0 : currentProduct.price) || '',\n      priceSale: (currentProduct === null || currentProduct === void 0 ? void 0 : currentProduct.priceSale) || '',\n      tags: (currentProduct === null || currentProduct === void 0 ? void 0 : currentProduct.tags) || [TAGS_OPTION[0]],\n      inStock: Boolean((currentProduct === null || currentProduct === void 0 ? void 0 : currentProduct.inventoryType) !== 'out_of_stock'),\n      taxes: true,\n      gender: (currentProduct === null || currentProduct === void 0 ? void 0 : currentProduct.gender) || GENDER_OPTION[2],\n      category: (currentProduct === null || currentProduct === void 0 ? void 0 : currentProduct.category) || CATEGORY_OPTION[0].classify[1]\n    },\n    validationSchema: NewProductSchema,\n    onSubmit: async (values, _ref3) => {\n      let {\n        setSubmitting,\n        resetForm,\n        setErrors\n      } = _ref3;\n\n      try {\n        await new Promise(resolve => setTimeout(resolve, 500));\n        resetForm();\n        setSubmitting(false);\n        enqueueSnackbar(!isEdit ? 'Create success' : 'Update success', {\n          variant: 'success'\n        });\n        navigate(PATH_DASHBOARD.eCommerce.list);\n      } catch (error) {\n        console.error(error);\n\n        if (isMountedRef.current) {\n          setSubmitting(false);\n          setErrors(error.message);\n        }\n      }\n    }\n  });\n  const {\n    errors,\n    values,\n    touched,\n    handleSubmit,\n    isSubmitting,\n    setFieldValue,\n    getFieldProps\n  } = formik;\n  const handleDrop = useCallback(acceptedFiles => {\n    setFieldValue('images', acceptedFiles.map(file => Object.assign(file, {\n      preview: URL.createObjectURL(file)\n    })));\n  }, [setFieldValue]);\n\n  const handleRemoveAll = () => {\n    setFieldValue('images', []);\n  };\n\n  const handleRemove = file => {\n    const filteredItems = values.images.filter(_file => _file !== file);\n    setFieldValue('images', filteredItems);\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormikProvider, {\n    value: formik,\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      noValidate: true,\n      autoComplete: \"off\",\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 8,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            sx: {\n              p: 3\n            },\n            children: /*#__PURE__*/_jsxDEV(Stack, {\n              spacing: 3,\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: \"Product Name\",\n                ...getFieldProps('name'),\n                error: Boolean(touched.name && errors.name),\n                helperText: touched.name && errors.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(LabelStyle, {\n                  children: \"Description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Editor, {\n                  simple: true,\n                  id: \"product-description\",\n                  value: values.description,\n                  onChange: val => setFieldValue('description', val),\n                  error: Boolean(touched.description && errors.description)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 19\n                }, this), touched.description && errors.description && /*#__PURE__*/_jsxDEV(FormHelperText, {\n                  error: true,\n                  sx: {\n                    px: 2\n                  },\n                  children: touched.description && errors.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(LabelStyle, {\n                  children: \"Add Images\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(UploadMultiFile, {\n                  showPreview: true,\n                  maxSize: 3145728,\n                  accept: \"image/*\",\n                  files: values.images,\n                  onDrop: handleDrop,\n                  onRemove: handleRemove,\n                  onRemoveAll: handleRemoveAll,\n                  error: Boolean(touched.images && errors.images)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 19\n                }, this), touched.images && errors.images && /*#__PURE__*/_jsxDEV(FormHelperText, {\n                  error: true,\n                  sx: {\n                    px: 2\n                  },\n                  children: touched.images && errors.images\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Stack, {\n            spacing: 3,\n            children: [/*#__PURE__*/_jsxDEV(Card, {\n              sx: {\n                p: 3\n              },\n              children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                control: /*#__PURE__*/_jsxDEV(Switch, { ...getFieldProps('inStock'),\n                  checked: values.inStock\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 28\n                }, this),\n                label: \"In stock\",\n                sx: {\n                  mb: 2\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Stack, {\n                spacing: 3,\n                children: [/*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  label: \"Product Code\",\n                  ...getFieldProps('code')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  label: \"Product SKU\",\n                  ...getFieldProps('sku')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(LabelStyle, {\n                    children: \"Gender\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 215,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(RadioGroup, { ...getFieldProps('gender'),\n                    row: true,\n                    children: /*#__PURE__*/_jsxDEV(Stack, {\n                      spacing: 1,\n                      direction: \"row\",\n                      children: GENDER_OPTION.map(gender => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                        value: gender,\n                        control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 222,\n                          columnNumber: 38\n                        }, this),\n                        label: gender\n                      }, gender, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 219,\n                        columnNumber: 27\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 217,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 216,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                  fullWidth: true,\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    children: \"Category\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 231,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Select, {\n                    label: \"Category\",\n                    native: true,\n                    ...getFieldProps('category'),\n                    value: values.category,\n                    children: CATEGORY_OPTION.map(category => /*#__PURE__*/_jsxDEV(\"optgroup\", {\n                      label: category.group,\n                      children: category.classify.map(classify => /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: classify,\n                        children: classify\n                      }, classify, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 241,\n                        columnNumber: 29\n                      }, this))\n                    }, category.group, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 239,\n                      columnNumber: 25\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 232,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n                  multiple: true,\n                  freeSolo: true,\n                  value: values.tags,\n                  onChange: (event, newValue) => {\n                    setFieldValue('tags', newValue);\n                  },\n                  options: TAGS_OPTION.map(option => option),\n                  renderTags: (value, getTagProps) => value.map((option, index) => /*#__PURE__*/_createElement(Chip, { ...getTagProps({\n                      index\n                    }),\n                    key: option,\n                    size: \"small\",\n                    label: option,\n                    __self: this,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 259,\n                      columnNumber: 25\n                    }\n                  })),\n                  renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Tags\",\n                    ...params\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 267,\n                    columnNumber: 46\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Card, {\n              sx: {\n                p: 3\n              },\n              children: [/*#__PURE__*/_jsxDEV(Stack, {\n                spacing: 3,\n                children: [/*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  placeholder: \"0.00\",\n                  label: \"Regular Price\",\n                  ...getFieldProps('price'),\n                  InputProps: {\n                    startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                      position: \"start\",\n                      children: \"$\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 280,\n                      columnNumber: 39\n                    }, this),\n                    type: 'number'\n                  },\n                  error: Boolean(touched.price && errors.price),\n                  helperText: touched.price && errors.price\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  placeholder: \"0.00\",\n                  label: \"Sale Price\",\n                  ...getFieldProps('priceSale'),\n                  InputProps: {\n                    startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                      position: \"start\",\n                      children: \"$\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 293,\n                      columnNumber: 39\n                    }, this),\n                    type: 'number'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                control: /*#__PURE__*/_jsxDEV(Switch, { ...getFieldProps('taxes'),\n                  checked: values.taxes\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 300,\n                  columnNumber: 28\n                }, this),\n                label: \"Price includes taxes\",\n                sx: {\n                  mt: 2\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(LoadingButton, {\n              type: \"submit\",\n              fullWidth: true,\n              variant: \"contained\",\n              size: \"large\",\n              loading: isSubmitting,\n              children: !isEdit ? 'Create Product' : 'Save Changes'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/pongsiri.an/Downloads/Theme/Minimal_TypeScript_v2.7.0/full_version_TS/src/sections/@dashboard/e-commerce/ProductNewForm.tsx"],"names":["Yup","useSnackbar","useNavigate","useCallback","Form","FormikProvider","useFormik","styled","LoadingButton","Card","Chip","Grid","Stack","Radio","Switch","Select","TextField","InputLabel","Typography","RadioGroup","FormControl","Autocomplete","InputAdornment","FormHelperText","FormControlLabel","useIsMountedRef","PATH_DASHBOARD","Editor","UploadMultiFile","GENDER_OPTION","CATEGORY_OPTION","group","classify","TAGS_OPTION","LabelStyle","theme","typography","subtitle2","color","palette","text","secondary","marginBottom","spacing","ProductNewForm","isEdit","currentProduct","navigate","enqueueSnackbar","isMountedRef","NewProductSchema","object","shape","name","string","required","description","images","array","min","price","number","formik","enableReinitialize","initialValues","code","sku","priceSale","tags","inStock","Boolean","inventoryType","taxes","gender","category","validationSchema","onSubmit","values","setSubmitting","resetForm","setErrors","Promise","resolve","setTimeout","variant","eCommerce","list","error","console","current","message","errors","touched","handleSubmit","isSubmitting","setFieldValue","getFieldProps","handleDrop","acceptedFiles","map","file","Object","assign","preview","URL","createObjectURL","handleRemoveAll","handleRemove","filteredItems","filter","_file","p","val","px","mb","event","newValue","option","value","getTagProps","index","params","startAdornment","type","mt"],"mappings":";AAAA,OAAO,KAAKA,GAAZ,MAAqB,KAArB;AACA,SAASC,WAAT,QAA4B,WAA5B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,SAASC,IAAT,EAAeC,cAAf,EAA+BC,SAA/B,QAAgD,QAAhD,C,CACA;;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAASC,aAAT,QAA8B,UAA9B;AACA,SACEC,IADF,EAEEC,IAFF,EAGEC,IAHF,EAIEC,KAJF,EAKEC,KALF,EAMEC,MANF,EAOEC,MAPF,EAQEC,SARF,EASEC,UATF,EAUEC,UAVF,EAWEC,UAXF,EAYEC,WAZF,EAaEC,YAbF,EAcEC,cAdF,EAeEC,cAfF,EAgBEC,gBAhBF,QAiBO,eAjBP,C,CAkBA;;AACA,OAAOC,eAAP,MAA4B,gCAA5B,C,CACA;;AACA,SAASC,cAAT,QAA+B,uBAA/B,C,CACA;;AAEA;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,SAASC,eAAT,QAAgC,4BAAhC,C,CAEA;;;;AAEA,MAAMC,aAAa,GAAG,CAAC,KAAD,EAAQ,OAAR,EAAiB,MAAjB,CAAtB;AAEA,MAAMC,eAAe,GAAG,CACtB;AAAEC,EAAAA,KAAK,EAAE,UAAT;AAAqBC,EAAAA,QAAQ,EAAE,CAAC,QAAD,EAAW,UAAX,EAAuB,OAAvB,EAAgC,SAAhC;AAA/B,CADsB,EAEtB;AAAED,EAAAA,KAAK,EAAE,UAAT;AAAqBC,EAAAA,QAAQ,EAAE,CAAC,OAAD,EAAU,SAAV,EAAqB,UAArB,EAAiC,YAAjC;AAA/B,CAFsB,EAGtB;AAAED,EAAAA,KAAK,EAAE,aAAT;AAAwBC,EAAAA,QAAQ,EAAE,CAAC,OAAD,EAAU,oBAAV,EAAgC,WAAhC,EAA6C,YAA7C;AAAlC,CAHsB,CAAxB;AAMA,MAAMC,WAAW,GAAG,CAClB,aADkB,EAElB,OAFkB,EAGlB,mBAHkB,EAIlB,QAJkB,EAKlB,WALkB,EAMlB,uBANkB,EAOlB,qBAPkB,EAQlB,WARkB,EASlB,iBATkB,EAUlB,SAVkB,EAWlB,sBAXkB,EAYlB,QAZkB,EAalB,UAbkB,CAApB;AAgBA,MAAMC,UAAU,GAAG3B,MAAM,CAACW,UAAD,CAAN,CAAmB;AAAA,MAAC;AAAEiB,IAAAA;AAAF,GAAD;AAAA,SAAgB,EACpD,GAAGA,KAAK,CAACC,UAAN,CAAiBC,SADgC;AAEpDC,IAAAA,KAAK,EAAEH,KAAK,CAACI,OAAN,CAAcC,IAAd,CAAmBC,SAF0B;AAGpDC,IAAAA,YAAY,EAAEP,KAAK,CAACQ,OAAN,CAAc,CAAd;AAHsC,GAAhB;AAAA,CAAnB,CAAnB,C,CAMA;;AAOA,eAAe,SAASC,cAAT,QAA2D;AAAA,MAAnC;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAAmC;AACxE,QAAMC,QAAQ,GAAG7C,WAAW,EAA5B;AACA,QAAM;AAAE8C,IAAAA;AAAF,MAAsB/C,WAAW,EAAvC;AACA,QAAMgD,YAAY,GAAGxB,eAAe,EAApC;AAEA,QAAMyB,gBAAgB,GAAGlD,GAAG,CAACmD,MAAJ,GAAaC,KAAb,CAAmB;AAC1CC,IAAAA,IAAI,EAAErD,GAAG,CAACsD,MAAJ,GAAaC,QAAb,CAAsB,kBAAtB,CADoC;AAE1CC,IAAAA,WAAW,EAAExD,GAAG,CAACsD,MAAJ,GAAaC,QAAb,CAAsB,yBAAtB,CAF6B;AAG1CE,IAAAA,MAAM,EAAEzD,GAAG,CAAC0D,KAAJ,GAAYC,GAAZ,CAAgB,CAAhB,EAAmB,oBAAnB,CAHkC;AAI1CC,IAAAA,KAAK,EAAE5D,GAAG,CAAC6D,MAAJ,GAAaN,QAAb,CAAsB,mBAAtB;AAJmC,GAAnB,CAAzB;AAOA,QAAMO,MAAM,GAAGxD,SAAS,CAAC;AACvByD,IAAAA,kBAAkB,EAAE,IADG;AAEvBC,IAAAA,aAAa,EAAE;AACbX,MAAAA,IAAI,EAAE,CAAAP,cAAc,SAAd,IAAAA,cAAc,WAAd,YAAAA,cAAc,CAAEO,IAAhB,KAAwB,EADjB;AAEbG,MAAAA,WAAW,EAAE,CAAAV,cAAc,SAAd,IAAAA,cAAc,WAAd,YAAAA,cAAc,CAAEU,WAAhB,KAA+B,EAF/B;AAGbC,MAAAA,MAAM,EAAE,CAAAX,cAAc,SAAd,IAAAA,cAAc,WAAd,YAAAA,cAAc,CAAEW,MAAhB,KAA0B,EAHrB;AAIbQ,MAAAA,IAAI,EAAE,CAAAnB,cAAc,SAAd,IAAAA,cAAc,WAAd,YAAAA,cAAc,CAAEmB,IAAhB,KAAwB,EAJjB;AAKbC,MAAAA,GAAG,EAAE,CAAApB,cAAc,SAAd,IAAAA,cAAc,WAAd,YAAAA,cAAc,CAAEoB,GAAhB,KAAuB,EALf;AAMbN,MAAAA,KAAK,EAAE,CAAAd,cAAc,SAAd,IAAAA,cAAc,WAAd,YAAAA,cAAc,CAAEc,KAAhB,KAAyB,EANnB;AAObO,MAAAA,SAAS,EAAE,CAAArB,cAAc,SAAd,IAAAA,cAAc,WAAd,YAAAA,cAAc,CAAEqB,SAAhB,KAA6B,EAP3B;AAQbC,MAAAA,IAAI,EAAE,CAAAtB,cAAc,SAAd,IAAAA,cAAc,WAAd,YAAAA,cAAc,CAAEsB,IAAhB,KAAwB,CAACnC,WAAW,CAAC,CAAD,CAAZ,CARjB;AASboC,MAAAA,OAAO,EAAEC,OAAO,CAAC,CAAAxB,cAAc,SAAd,IAAAA,cAAc,WAAd,YAAAA,cAAc,CAAEyB,aAAhB,MAAkC,cAAnC,CATH;AAUbC,MAAAA,KAAK,EAAE,IAVM;AAWbC,MAAAA,MAAM,EAAE,CAAA3B,cAAc,SAAd,IAAAA,cAAc,WAAd,YAAAA,cAAc,CAAE2B,MAAhB,KAA0B5C,aAAa,CAAC,CAAD,CAXlC;AAYb6C,MAAAA,QAAQ,EAAE,CAAA5B,cAAc,SAAd,IAAAA,cAAc,WAAd,YAAAA,cAAc,CAAE4B,QAAhB,KAA4B5C,eAAe,CAAC,CAAD,CAAf,CAAmBE,QAAnB,CAA4B,CAA5B;AAZzB,KAFQ;AAgBvB2C,IAAAA,gBAAgB,EAAEzB,gBAhBK;AAiBvB0B,IAAAA,QAAQ,EAAE,OAAOC,MAAP,YAA2D;AAAA,UAA5C;AAAEC,QAAAA,aAAF;AAAiBC,QAAAA,SAAjB;AAA4BC,QAAAA;AAA5B,OAA4C;;AACnE,UAAI;AACF,cAAM,IAAIC,OAAJ,CAAaC,OAAD,IAAaC,UAAU,CAACD,OAAD,EAAU,GAAV,CAAnC,CAAN;AACAH,QAAAA,SAAS;AACTD,QAAAA,aAAa,CAAC,KAAD,CAAb;AACA9B,QAAAA,eAAe,CAAC,CAACH,MAAD,GAAU,gBAAV,GAA6B,gBAA9B,EAAgD;AAAEuC,UAAAA,OAAO,EAAE;AAAX,SAAhD,CAAf;AACArC,QAAAA,QAAQ,CAACrB,cAAc,CAAC2D,SAAf,CAAyBC,IAA1B,CAAR;AACD,OAND,CAME,OAAOC,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;;AACA,YAAItC,YAAY,CAACwC,OAAjB,EAA0B;AACxBX,UAAAA,aAAa,CAAC,KAAD,CAAb;AACAE,UAAAA,SAAS,CAACO,KAAK,CAACG,OAAP,CAAT;AACD;AACF;AACF;AA/BsB,GAAD,CAAxB;AAkCA,QAAM;AAAEC,IAAAA,MAAF;AAAUd,IAAAA,MAAV;AAAkBe,IAAAA,OAAlB;AAA2BC,IAAAA,YAA3B;AAAyCC,IAAAA,YAAzC;AAAuDC,IAAAA,aAAvD;AAAsEC,IAAAA;AAAtE,MACJlC,MADF;AAGA,QAAMmC,UAAU,GAAG9F,WAAW,CAC3B+F,aAAD,IAAmB;AACjBH,IAAAA,aAAa,CACX,QADW,EAEXG,aAAa,CAACC,GAAd,CAAmBC,IAAD,IAChBC,MAAM,CAACC,MAAP,CAAcF,IAAd,EAAoB;AAClBG,MAAAA,OAAO,EAAEC,GAAG,CAACC,eAAJ,CAAoBL,IAApB;AADS,KAApB,CADF,CAFW,CAAb;AAQD,GAV2B,EAW5B,CAACL,aAAD,CAX4B,CAA9B;;AAcA,QAAMW,eAAe,GAAG,MAAM;AAC5BX,IAAAA,aAAa,CAAC,QAAD,EAAW,EAAX,CAAb;AACD,GAFD;;AAIA,QAAMY,YAAY,GAAIP,IAAD,IAAyB;AAC5C,UAAMQ,aAAa,GAAG/B,MAAM,CAACpB,MAAP,CAAcoD,MAAd,CAAsBC,KAAD,IAAWA,KAAK,KAAKV,IAA1C,CAAtB;AACAL,IAAAA,aAAa,CAAC,QAAD,EAAWa,aAAX,CAAb;AACD,GAHD;;AAKA,sBACE,QAAC,cAAD;AAAgB,IAAA,KAAK,EAAE9C,MAAvB;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,UAAU,MAAhB;AAAiB,MAAA,YAAY,EAAC,KAA9B;AAAoC,MAAA,QAAQ,EAAE+B,YAA9C;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAE,CAAzB;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAmB,UAAA,EAAE,EAAE,CAAvB;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAE;AAAEkB,cAAAA,CAAC,EAAE;AAAL,aAAV;AAAA,mCACE,QAAC,KAAD;AAAO,cAAA,OAAO,EAAE,CAAhB;AAAA,sCACE,QAAC,SAAD;AACE,gBAAA,SAAS,MADX;AAEE,gBAAA,KAAK,EAAC,cAFR;AAAA,mBAGMf,aAAa,CAAC,MAAD,CAHnB;AAIE,gBAAA,KAAK,EAAE1B,OAAO,CAACsB,OAAO,CAACvC,IAAR,IAAgBsC,MAAM,CAACtC,IAAxB,CAJhB;AAKE,gBAAA,UAAU,EAAEuC,OAAO,CAACvC,IAAR,IAAgBsC,MAAM,CAACtC;AALrC;AAAA;AAAA;AAAA;AAAA,sBADF,eASE;AAAA,wCACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,QAAC,MAAD;AACE,kBAAA,MAAM,MADR;AAEE,kBAAA,EAAE,EAAC,qBAFL;AAGE,kBAAA,KAAK,EAAEwB,MAAM,CAACrB,WAHhB;AAIE,kBAAA,QAAQ,EAAGwD,GAAD,IAASjB,aAAa,CAAC,aAAD,EAAgBiB,GAAhB,CAJlC;AAKE,kBAAA,KAAK,EAAE1C,OAAO,CAACsB,OAAO,CAACpC,WAAR,IAAuBmC,MAAM,CAACnC,WAA/B;AALhB;AAAA;AAAA;AAAA;AAAA,wBAFF,EASGoC,OAAO,CAACpC,WAAR,IAAuBmC,MAAM,CAACnC,WAA9B,iBACC,QAAC,cAAD;AAAgB,kBAAA,KAAK,MAArB;AAAsB,kBAAA,EAAE,EAAE;AAAEyD,oBAAAA,EAAE,EAAE;AAAN,mBAA1B;AAAA,4BACGrB,OAAO,CAACpC,WAAR,IAAuBmC,MAAM,CAACnC;AADjC;AAAA;AAAA;AAAA;AAAA,wBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBATF,eAyBE;AAAA,wCACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,QAAC,eAAD;AACE,kBAAA,WAAW,MADb;AAEE,kBAAA,OAAO,EAAE,OAFX;AAGE,kBAAA,MAAM,EAAC,SAHT;AAIE,kBAAA,KAAK,EAAEqB,MAAM,CAACpB,MAJhB;AAKE,kBAAA,MAAM,EAAEwC,UALV;AAME,kBAAA,QAAQ,EAAEU,YANZ;AAOE,kBAAA,WAAW,EAAED,eAPf;AAQE,kBAAA,KAAK,EAAEpC,OAAO,CAACsB,OAAO,CAACnC,MAAR,IAAkBkC,MAAM,CAAClC,MAA1B;AARhB;AAAA;AAAA;AAAA;AAAA,wBAFF,EAYGmC,OAAO,CAACnC,MAAR,IAAkBkC,MAAM,CAAClC,MAAzB,iBACC,QAAC,cAAD;AAAgB,kBAAA,KAAK,MAArB;AAAsB,kBAAA,EAAE,EAAE;AAAEwD,oBAAAA,EAAE,EAAE;AAAN,mBAA1B;AAAA,4BACGrB,OAAO,CAACnC,MAAR,IAAkBkC,MAAM,CAAClC;AAD5B;AAAA;AAAA;AAAA;AAAA,wBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBAzBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAkDE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAmB,UAAA,EAAE,EAAE,CAAvB;AAAA,iCACE,QAAC,KAAD;AAAO,YAAA,OAAO,EAAE,CAAhB;AAAA,oCACE,QAAC,IAAD;AAAM,cAAA,EAAE,EAAE;AAAEsD,gBAAAA,CAAC,EAAE;AAAL,eAAV;AAAA,sCACE,QAAC,gBAAD;AACE,gBAAA,OAAO,eAAE,QAAC,MAAD,OAAYf,aAAa,CAAC,SAAD,CAAzB;AAAsC,kBAAA,OAAO,EAAEnB,MAAM,CAACR;AAAtD;AAAA;AAAA;AAAA;AAAA,wBADX;AAEE,gBAAA,KAAK,EAAC,UAFR;AAGE,gBAAA,EAAE,EAAE;AAAE6C,kBAAAA,EAAE,EAAE;AAAN;AAHN;AAAA;AAAA;AAAA;AAAA,sBADF,eAOE,QAAC,KAAD;AAAO,gBAAA,OAAO,EAAE,CAAhB;AAAA,wCACE,QAAC,SAAD;AAAW,kBAAA,SAAS,MAApB;AAAqB,kBAAA,KAAK,EAAC,cAA3B;AAAA,qBAA8ClB,aAAa,CAAC,MAAD;AAA3D;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,QAAC,SAAD;AAAW,kBAAA,SAAS,MAApB;AAAqB,kBAAA,KAAK,EAAC,aAA3B;AAAA,qBAA6CA,aAAa,CAAC,KAAD;AAA1D;AAAA;AAAA;AAAA;AAAA,wBAFF,eAIE;AAAA,0CACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE,QAAC,UAAD,OAAgBA,aAAa,CAAC,QAAD,CAA7B;AAAyC,oBAAA,GAAG,MAA5C;AAAA,2CACE,QAAC,KAAD;AAAO,sBAAA,OAAO,EAAE,CAAhB;AAAmB,sBAAA,SAAS,EAAC,KAA7B;AAAA,gCACGnE,aAAa,CAACsE,GAAd,CAAmB1B,MAAD,iBACjB,QAAC,gBAAD;AAEE,wBAAA,KAAK,EAAEA,MAFT;AAGE,wBAAA,OAAO,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,gCAHX;AAIE,wBAAA,KAAK,EAAEA;AAJT,yBACOA,MADP;AAAA;AAAA;AAAA;AAAA,8BADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,0BAFF;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJF,eAoBE,QAAC,WAAD;AAAa,kBAAA,SAAS,MAAtB;AAAA,0CACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE,QAAC,MAAD;AACE,oBAAA,KAAK,EAAC,UADR;AAEE,oBAAA,MAAM,MAFR;AAAA,uBAGMuB,aAAa,CAAC,UAAD,CAHnB;AAIE,oBAAA,KAAK,EAAEnB,MAAM,CAACH,QAJhB;AAAA,8BAMG5C,eAAe,CAACqE,GAAhB,CAAqBzB,QAAD,iBACnB;AAA+B,sBAAA,KAAK,EAAEA,QAAQ,CAAC3C,KAA/C;AAAA,gCACG2C,QAAQ,CAAC1C,QAAT,CAAkBmE,GAAlB,CAAuBnE,QAAD,iBACrB;AAAuB,wBAAA,KAAK,EAAEA,QAA9B;AAAA,kCACGA;AADH,yBAAaA,QAAb;AAAA;AAAA;AAAA;AAAA,8BADD;AADH,uBAAe0C,QAAQ,CAAC3C,KAAxB;AAAA;AAAA;AAAA;AAAA,4BADD;AANH;AAAA;AAAA;AAAA;AAAA,0BAFF;AAAA;AAAA;AAAA;AAAA;AAAA,wBApBF,eAuCE,QAAC,YAAD;AACE,kBAAA,QAAQ,MADV;AAEE,kBAAA,QAAQ,MAFV;AAGE,kBAAA,KAAK,EAAE8C,MAAM,CAACT,IAHhB;AAIE,kBAAA,QAAQ,EAAE,CAAC+C,KAAD,EAAQC,QAAR,KAAqB;AAC7BrB,oBAAAA,aAAa,CAAC,MAAD,EAASqB,QAAT,CAAb;AACD,mBANH;AAOE,kBAAA,OAAO,EAAEnF,WAAW,CAACkE,GAAZ,CAAiBkB,MAAD,IAAYA,MAA5B,CAPX;AAQE,kBAAA,UAAU,EAAE,CAACC,KAAD,EAAQC,WAAR,KACVD,KAAK,CAACnB,GAAN,CAAU,CAACkB,MAAD,EAASG,KAAT,kBACR,eAAC,IAAD,OACMD,WAAW,CAAC;AAAEC,sBAAAA;AAAF,qBAAD,CADjB;AAEE,oBAAA,GAAG,EAAEH,MAFP;AAGE,oBAAA,IAAI,EAAC,OAHP;AAIE,oBAAA,KAAK,EAAEA,MAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CATJ;AAkBE,kBAAA,WAAW,EAAGI,MAAD,iBAAY,QAAC,SAAD;AAAW,oBAAA,KAAK,EAAC,MAAjB;AAAA,uBAA4BA;AAA5B;AAAA;AAAA;AAAA;AAAA;AAlB3B;AAAA;AAAA;AAAA;AAAA,wBAvCF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAsEE,QAAC,IAAD;AAAM,cAAA,EAAE,EAAE;AAAEV,gBAAAA,CAAC,EAAE;AAAL,eAAV;AAAA,sCACE,QAAC,KAAD;AAAO,gBAAA,OAAO,EAAE,CAAhB;AAAA,wCACE,QAAC,SAAD;AACE,kBAAA,SAAS,MADX;AAEE,kBAAA,WAAW,EAAC,MAFd;AAGE,kBAAA,KAAK,EAAC,eAHR;AAAA,qBAIMf,aAAa,CAAC,OAAD,CAJnB;AAKE,kBAAA,UAAU,EAAE;AACV0B,oBAAAA,cAAc,eAAE,QAAC,cAAD;AAAgB,sBAAA,QAAQ,EAAC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADN;AAEVC,oBAAAA,IAAI,EAAE;AAFI,mBALd;AASE,kBAAA,KAAK,EAAErD,OAAO,CAACsB,OAAO,CAAChC,KAAR,IAAiB+B,MAAM,CAAC/B,KAAzB,CAThB;AAUE,kBAAA,UAAU,EAAEgC,OAAO,CAAChC,KAAR,IAAiB+B,MAAM,CAAC/B;AAVtC;AAAA;AAAA;AAAA;AAAA,wBADF,eAcE,QAAC,SAAD;AACE,kBAAA,SAAS,MADX;AAEE,kBAAA,WAAW,EAAC,MAFd;AAGE,kBAAA,KAAK,EAAC,YAHR;AAAA,qBAIMoC,aAAa,CAAC,WAAD,CAJnB;AAKE,kBAAA,UAAU,EAAE;AACV0B,oBAAAA,cAAc,eAAE,QAAC,cAAD;AAAgB,sBAAA,QAAQ,EAAC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADN;AAEVC,oBAAAA,IAAI,EAAE;AAFI;AALd;AAAA;AAAA;AAAA;AAAA,wBAdF;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eA2BE,QAAC,gBAAD;AACE,gBAAA,OAAO,eAAE,QAAC,MAAD,OAAY3B,aAAa,CAAC,OAAD,CAAzB;AAAoC,kBAAA,OAAO,EAAEnB,MAAM,CAACL;AAApD;AAAA;AAAA;AAAA;AAAA,wBADX;AAEE,gBAAA,KAAK,EAAC,sBAFR;AAGE,gBAAA,EAAE,EAAE;AAAEoD,kBAAAA,EAAE,EAAE;AAAN;AAHN;AAAA;AAAA;AAAA;AAAA,sBA3BF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAtEF,eAwGE,QAAC,aAAD;AACE,cAAA,IAAI,EAAC,QADP;AAEE,cAAA,SAAS,MAFX;AAGE,cAAA,OAAO,EAAC,WAHV;AAIE,cAAA,IAAI,EAAC,OAJP;AAKE,cAAA,OAAO,EAAE9B,YALX;AAAA,wBAOG,CAACjD,MAAD,GAAU,gBAAV,GAA6B;AAPhC;AAAA;AAAA;AAAA;AAAA,oBAxGF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAlDF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA6KD","sourcesContent":["import * as Yup from 'yup';\nimport { useSnackbar } from 'notistack';\nimport { useNavigate } from 'react-router-dom';\nimport { useCallback } from 'react';\nimport { Form, FormikProvider, useFormik } from 'formik';\n// @mui\nimport { styled } from '@mui/material/styles';\nimport { LoadingButton } from '@mui/lab';\nimport {\n  Card,\n  Chip,\n  Grid,\n  Stack,\n  Radio,\n  Switch,\n  Select,\n  TextField,\n  InputLabel,\n  Typography,\n  RadioGroup,\n  FormControl,\n  Autocomplete,\n  InputAdornment,\n  FormHelperText,\n  FormControlLabel,\n} from '@mui/material';\n// hooks\nimport useIsMountedRef from '../../../hooks/useIsMountedRef';\n// routes\nimport { PATH_DASHBOARD } from '../../../routes/paths';\n// @types\nimport { Product } from '../../../@types/product';\n//\nimport Editor from '../../../components/editor';\nimport { UploadMultiFile } from '../../../components/upload';\n\n// ----------------------------------------------------------------------\n\nconst GENDER_OPTION = ['Men', 'Women', 'Kids'];\n\nconst CATEGORY_OPTION = [\n  { group: 'Clothing', classify: ['Shirts', 'T-shirts', 'Jeans', 'Leather'] },\n  { group: 'Tailored', classify: ['Suits', 'Blazers', 'Trousers', 'Waistcoats'] },\n  { group: 'Accessories', classify: ['Shoes', 'Backpacks and bags', 'Bracelets', 'Face masks'] },\n];\n\nconst TAGS_OPTION = [\n  'Toy Story 3',\n  'Logan',\n  'Full Metal Jacket',\n  'Dangal',\n  'The Sting',\n  '2001: A Space Odyssey',\n  \"Singin' in the Rain\",\n  'Toy Story',\n  'Bicycle Thieves',\n  'The Kid',\n  'Inglourious Basterds',\n  'Snatch',\n  '3 Idiots',\n];\n\nconst LabelStyle = styled(Typography)(({ theme }) => ({\n  ...theme.typography.subtitle2,\n  color: theme.palette.text.secondary,\n  marginBottom: theme.spacing(1),\n}));\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  isEdit: boolean;\n  currentProduct?: Product;\n};\n\nexport default function ProductNewForm({ isEdit, currentProduct }: Props) {\n  const navigate = useNavigate();\n  const { enqueueSnackbar } = useSnackbar();\n  const isMountedRef = useIsMountedRef();\n\n  const NewProductSchema = Yup.object().shape({\n    name: Yup.string().required('Name is required'),\n    description: Yup.string().required('Description is required'),\n    images: Yup.array().min(1, 'Images is required'),\n    price: Yup.number().required('Price is required'),\n  });\n\n  const formik = useFormik({\n    enableReinitialize: true,\n    initialValues: {\n      name: currentProduct?.name || '',\n      description: currentProduct?.description || '',\n      images: currentProduct?.images || [],\n      code: currentProduct?.code || '',\n      sku: currentProduct?.sku || '',\n      price: currentProduct?.price || '',\n      priceSale: currentProduct?.priceSale || '',\n      tags: currentProduct?.tags || [TAGS_OPTION[0]],\n      inStock: Boolean(currentProduct?.inventoryType !== 'out_of_stock'),\n      taxes: true,\n      gender: currentProduct?.gender || GENDER_OPTION[2],\n      category: currentProduct?.category || CATEGORY_OPTION[0].classify[1],\n    },\n    validationSchema: NewProductSchema,\n    onSubmit: async (values, { setSubmitting, resetForm, setErrors }) => {\n      try {\n        await new Promise((resolve) => setTimeout(resolve, 500));\n        resetForm();\n        setSubmitting(false);\n        enqueueSnackbar(!isEdit ? 'Create success' : 'Update success', { variant: 'success' });\n        navigate(PATH_DASHBOARD.eCommerce.list);\n      } catch (error) {\n        console.error(error);\n        if (isMountedRef.current) {\n          setSubmitting(false);\n          setErrors(error.message);\n        }\n      }\n    },\n  });\n\n  const { errors, values, touched, handleSubmit, isSubmitting, setFieldValue, getFieldProps } =\n    formik;\n\n  const handleDrop = useCallback(\n    (acceptedFiles) => {\n      setFieldValue(\n        'images',\n        acceptedFiles.map((file: Blob | MediaSource) =>\n          Object.assign(file, {\n            preview: URL.createObjectURL(file),\n          })\n        )\n      );\n    },\n    [setFieldValue]\n  );\n\n  const handleRemoveAll = () => {\n    setFieldValue('images', []);\n  };\n\n  const handleRemove = (file: File | string) => {\n    const filteredItems = values.images.filter((_file) => _file !== file);\n    setFieldValue('images', filteredItems);\n  };\n\n  return (\n    <FormikProvider value={formik}>\n      <Form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={8}>\n            <Card sx={{ p: 3 }}>\n              <Stack spacing={3}>\n                <TextField\n                  fullWidth\n                  label=\"Product Name\"\n                  {...getFieldProps('name')}\n                  error={Boolean(touched.name && errors.name)}\n                  helperText={touched.name && errors.name}\n                />\n\n                <div>\n                  <LabelStyle>Description</LabelStyle>\n                  <Editor\n                    simple\n                    id=\"product-description\"\n                    value={values.description}\n                    onChange={(val) => setFieldValue('description', val)}\n                    error={Boolean(touched.description && errors.description)}\n                  />\n                  {touched.description && errors.description && (\n                    <FormHelperText error sx={{ px: 2 }}>\n                      {touched.description && errors.description}\n                    </FormHelperText>\n                  )}\n                </div>\n\n                <div>\n                  <LabelStyle>Add Images</LabelStyle>\n                  <UploadMultiFile\n                    showPreview\n                    maxSize={3145728}\n                    accept=\"image/*\"\n                    files={values.images}\n                    onDrop={handleDrop}\n                    onRemove={handleRemove}\n                    onRemoveAll={handleRemoveAll}\n                    error={Boolean(touched.images && errors.images)}\n                  />\n                  {touched.images && errors.images && (\n                    <FormHelperText error sx={{ px: 2 }}>\n                      {touched.images && errors.images}\n                    </FormHelperText>\n                  )}\n                </div>\n              </Stack>\n            </Card>\n          </Grid>\n\n          <Grid item xs={12} md={4}>\n            <Stack spacing={3}>\n              <Card sx={{ p: 3 }}>\n                <FormControlLabel\n                  control={<Switch {...getFieldProps('inStock')} checked={values.inStock} />}\n                  label=\"In stock\"\n                  sx={{ mb: 2 }}\n                />\n\n                <Stack spacing={3}>\n                  <TextField fullWidth label=\"Product Code\" {...getFieldProps('code')} />\n                  <TextField fullWidth label=\"Product SKU\" {...getFieldProps('sku')} />\n\n                  <div>\n                    <LabelStyle>Gender</LabelStyle>\n                    <RadioGroup {...getFieldProps('gender')} row>\n                      <Stack spacing={1} direction=\"row\">\n                        {GENDER_OPTION.map((gender) => (\n                          <FormControlLabel\n                            key={gender}\n                            value={gender}\n                            control={<Radio />}\n                            label={gender}\n                          />\n                        ))}\n                      </Stack>\n                    </RadioGroup>\n                  </div>\n\n                  <FormControl fullWidth>\n                    <InputLabel>Category</InputLabel>\n                    <Select\n                      label=\"Category\"\n                      native\n                      {...getFieldProps('category')}\n                      value={values.category}\n                    >\n                      {CATEGORY_OPTION.map((category) => (\n                        <optgroup key={category.group} label={category.group}>\n                          {category.classify.map((classify) => (\n                            <option key={classify} value={classify}>\n                              {classify}\n                            </option>\n                          ))}\n                        </optgroup>\n                      ))}\n                    </Select>\n                  </FormControl>\n                  <Autocomplete\n                    multiple\n                    freeSolo\n                    value={values.tags}\n                    onChange={(event, newValue) => {\n                      setFieldValue('tags', newValue);\n                    }}\n                    options={TAGS_OPTION.map((option) => option)}\n                    renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip\n                          {...getTagProps({ index })}\n                          key={option}\n                          size=\"small\"\n                          label={option}\n                        />\n                      ))\n                    }\n                    renderInput={(params) => <TextField label=\"Tags\" {...params} />}\n                  />\n                </Stack>\n              </Card>\n\n              <Card sx={{ p: 3 }}>\n                <Stack spacing={3}>\n                  <TextField\n                    fullWidth\n                    placeholder=\"0.00\"\n                    label=\"Regular Price\"\n                    {...getFieldProps('price')}\n                    InputProps={{\n                      startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\n                      type: 'number',\n                    }}\n                    error={Boolean(touched.price && errors.price)}\n                    helperText={touched.price && errors.price}\n                  />\n\n                  <TextField\n                    fullWidth\n                    placeholder=\"0.00\"\n                    label=\"Sale Price\"\n                    {...getFieldProps('priceSale')}\n                    InputProps={{\n                      startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\n                      type: 'number',\n                    }}\n                  />\n                </Stack>\n\n                <FormControlLabel\n                  control={<Switch {...getFieldProps('taxes')} checked={values.taxes} />}\n                  label=\"Price includes taxes\"\n                  sx={{ mt: 2 }}\n                />\n              </Card>\n\n              <LoadingButton\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                size=\"large\"\n                loading={isSubmitting}\n              >\n                {!isEdit ? 'Create Product' : 'Save Changes'}\n              </LoadingButton>\n            </Stack>\n          </Grid>\n        </Grid>\n      </Form>\n    </FormikProvider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}