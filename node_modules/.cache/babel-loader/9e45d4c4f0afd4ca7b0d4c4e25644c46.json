{"ast":null,"code":"var _jsxFileName = \"/Users/pongsiri.an/Documents/GitHub/Valenta-front-end/src/pages/overview/mui/dialog/ScrollDialog.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef, useEffect } from 'react'; // @mui\n\nimport { Button, Dialog, DialogTitle, DialogContent, DialogActions, DialogContentText } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// ----------------------------------------------------------------------\nexport default function ScrollDialog() {\n  _s();\n\n  const [open, setOpen] = useState(false);\n  const [scroll, setScroll] = useState('paper');\n\n  const handleClickOpen = scrollType => () => {\n    setOpen(true);\n    setScroll(scrollType);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const descriptionElementRef = useRef(null);\n  useEffect(() => {\n    if (open) {\n      const {\n        current: descriptionElement\n      } = descriptionElementRef;\n\n      if (descriptionElement !== null) {\n        descriptionElement.focus();\n      }\n    }\n  }, [open]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      onClick: handleClickOpen('paper'),\n      sx: {\n        mr: 2\n      },\n      children: \"scroll=paper\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      onClick: handleClickOpen('body'),\n      children: \"scroll=body\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      scroll: scroll,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        sx: {\n          pb: 2\n        },\n        children: \"Subscribe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        dividers: scroll === 'paper',\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          id: \"scroll-dialog-description\",\n          ref: descriptionElementRef,\n          tabIndex: -1,\n          children: [...new Array(50)].map(() => `Cras mattis consectetur purus sit amet fermentum.\nCras justo odio, dapibus ac facilisis in, egestas eget quam.\nMorbi leo risus, porta ac consectetur ac, vestibulum at eros.\nPraesent commodo cursus magna, vel scelerisque nisl consectetur et.`).join('\\n')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: handleClose,\n          children: \"Subscribe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ScrollDialog, \"cKaj3ulJoogf260F/Xd9/QnRqew=\");\n\n_c = ScrollDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"ScrollDialog\");","map":{"version":3,"sources":["/Users/pongsiri.an/Documents/GitHub/Valenta-front-end/src/pages/overview/mui/dialog/ScrollDialog.tsx"],"names":["useState","useRef","useEffect","Button","Dialog","DialogTitle","DialogContent","DialogActions","DialogContentText","ScrollDialog","open","setOpen","scroll","setScroll","handleClickOpen","scrollType","handleClose","descriptionElementRef","current","descriptionElement","focus","mr","pb","Array","map","join"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,MAAnB,EAA2BC,SAA3B,QAA4C,OAA5C,C,CACA;;AACA,SACEC,MADF,EAEEC,MAFF,EAGEC,WAHF,EAIEC,aAJF,EAKEC,aALF,EAMEC,iBANF,QAOO,eAPP;;AAUA;AAEA,eAAe,SAASC,YAAT,GAAwB;AAAA;;AACrC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACY,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAwB,OAAxB,CAApC;;AAEA,QAAMc,eAAe,GAAIC,UAAD,IAAuC,MAAM;AACnEJ,IAAAA,OAAO,CAAC,IAAD,CAAP;AACAE,IAAAA,SAAS,CAACE,UAAD,CAAT;AACD,GAHD;;AAKA,QAAMC,WAAW,GAAG,MAAM;AACxBL,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAFD;;AAIA,QAAMM,qBAAqB,GAAGhB,MAAM,CAAc,IAAd,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,IAAJ,EAAU;AACR,YAAM;AAAEQ,QAAAA,OAAO,EAAEC;AAAX,UAAkCF,qBAAxC;;AACA,UAAIE,kBAAkB,KAAK,IAA3B,EAAiC;AAC/BA,QAAAA,kBAAkB,CAACC,KAAnB;AACD;AACF;AACF,GAPQ,EAON,CAACV,IAAD,CAPM,CAAT;AASA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,UAAhB;AAA2B,MAAA,OAAO,EAAEI,eAAe,CAAC,OAAD,CAAnD;AAA8D,MAAA,EAAE,EAAE;AAAEO,QAAAA,EAAE,EAAE;AAAN,OAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,UAAhB;AAA2B,MAAA,OAAO,EAAEP,eAAe,CAAC,MAAD,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAQE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAEJ,IAAd;AAAoB,MAAA,OAAO,EAAEM,WAA7B;AAA0C,MAAA,MAAM,EAAEJ,MAAlD;AAAA,8BACE,QAAC,WAAD;AAAa,QAAA,EAAE,EAAE;AAAEU,UAAAA,EAAE,EAAE;AAAN,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,aAAD;AAAe,QAAA,QAAQ,EAAEV,MAAM,KAAK,OAApC;AAAA,+BACE,QAAC,iBAAD;AACE,UAAA,EAAE,EAAC,2BADL;AAEE,UAAA,GAAG,EAAEK,qBAFP;AAGE,UAAA,QAAQ,EAAE,CAAC,CAHb;AAAA,oBAKG,CAAC,GAAG,IAAIM,KAAJ,CAAU,EAAV,CAAJ,EACEC,GADF,CAEG,MAAO;AACvB;AACA;AACA,oEALa,EAOEC,IAPF,CAOO,IAPP;AALH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF,eAkBE,QAAC,aAAD;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAET,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,WAAhB;AAA4B,UAAA,OAAO,EAAEA,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoCD;;GA5DuBP,Y;;KAAAA,Y","sourcesContent":["import { useState, useRef, useEffect } from 'react';\n// @mui\nimport {\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  DialogContentText\n} from '@mui/material';\nimport { DialogProps } from '@mui/material/Dialog';\n\n// ----------------------------------------------------------------------\n\nexport default function ScrollDialog() {\n  const [open, setOpen] = useState(false);\n  const [scroll, setScroll] = useState<DialogProps['scroll']>('paper');\n\n  const handleClickOpen = (scrollType: DialogProps['scroll']) => () => {\n    setOpen(true);\n    setScroll(scrollType);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const descriptionElementRef = useRef<HTMLElement>(null);\n\n  useEffect(() => {\n    if (open) {\n      const { current: descriptionElement } = descriptionElementRef;\n      if (descriptionElement !== null) {\n        descriptionElement.focus();\n      }\n    }\n  }, [open]);\n\n  return (\n    <div>\n      <Button variant=\"outlined\" onClick={handleClickOpen('paper')} sx={{ mr: 2 }}>\n        scroll=paper\n      </Button>\n      <Button variant=\"outlined\" onClick={handleClickOpen('body')}>\n        scroll=body\n      </Button>\n\n      <Dialog open={open} onClose={handleClose} scroll={scroll}>\n        <DialogTitle sx={{ pb: 2 }}>Subscribe</DialogTitle>\n        <DialogContent dividers={scroll === 'paper'}>\n          <DialogContentText\n            id=\"scroll-dialog-description\"\n            ref={descriptionElementRef}\n            tabIndex={-1}\n          >\n            {[...new Array(50)]\n              .map(\n                () => `Cras mattis consectetur purus sit amet fermentum.\nCras justo odio, dapibus ac facilisis in, egestas eget quam.\nMorbi leo risus, porta ac consectetur ac, vestibulum at eros.\nPraesent commodo cursus magna, vel scelerisque nisl consectetur et.`\n              )\n              .join('\\n')}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Cancel</Button>\n          <Button variant=\"contained\" onClick={handleClose}>\n            Subscribe\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}