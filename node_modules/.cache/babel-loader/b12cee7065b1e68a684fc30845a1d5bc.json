{"ast":null,"code":"var _jsxFileName = \"/Users/pongsiri.an/Downloads/Theme/Minimal_TypeScript_v2.7.0/full_version_TS/src/sections/@dashboard/chat/ChatSearchResults.tsx\";\n// @mui\nimport { List, Avatar, Typography, ListItemText, ListItemAvatar, ListItemButton } from '@mui/material'; // @types\n\n//\nimport SearchNotFound from '../../../components/SearchNotFound'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ChatSearchResults(_ref) {\n  let {\n    query,\n    results,\n    onSelectContact\n  } = _ref;\n  const isFound = results.length > 0;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      paragraph: true,\n      variant: \"subtitle1\",\n      sx: {\n        px: 3,\n        color: 'text.secondary'\n      },\n      children: \"Contacts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      disablePadding: true,\n      children: results.map(result => /*#__PURE__*/_jsxDEV(ListItemButton, {\n        onClick: () => onSelectContact(result),\n        sx: {\n          py: 1.5,\n          px: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            alt: result.name,\n            src: result.avatar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: result.name,\n          primaryTypographyProps: {\n            noWrap: true,\n            variant: 'subtitle2'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)]\n      }, result.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), !isFound && /*#__PURE__*/_jsxDEV(SearchNotFound, {\n      searchQuery: query,\n      sx: {\n        p: 3,\n        mx: 'auto',\n        width: `calc(100% - 48px)`,\n        bgcolor: 'background.neutral'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}","map":{"version":3,"sources":["/Users/pongsiri.an/Downloads/Theme/Minimal_TypeScript_v2.7.0/full_version_TS/src/sections/@dashboard/chat/ChatSearchResults.tsx"],"names":["List","Avatar","Typography","ListItemText","ListItemAvatar","ListItemButton","SearchNotFound","ChatSearchResults","query","results","onSelectContact","isFound","length","px","color","map","result","py","name","avatar","noWrap","variant","id","p","mx","width","bgcolor"],"mappings":";AAAA;AACA,SACEA,IADF,EAEEC,MAFF,EAGEC,UAHF,EAIEC,YAJF,EAKEC,cALF,EAMEC,cANF,QAOO,eAPP,C,CAQA;;AAEA;AACA,OAAOC,cAAP,MAA2B,oCAA3B,C,CAEA;;;;AAQA,eAAe,SAASC,iBAAT,OAAuE;AAAA,MAA5C;AAAEC,IAAAA,KAAF;AAASC,IAAAA,OAAT;AAAkBC,IAAAA;AAAlB,GAA4C;AACpF,QAAMC,OAAO,GAAGF,OAAO,CAACG,MAAR,GAAiB,CAAjC;AAEA,sBACE;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,SAAS,MAArB;AAAsB,MAAA,OAAO,EAAC,WAA9B;AAA0C,MAAA,EAAE,EAAE;AAAEC,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,IAAD;AAAM,MAAA,cAAc,MAApB;AAAA,gBACGL,OAAO,CAACM,GAAR,CAAaC,MAAD,iBACX,QAAC,cAAD;AAEE,QAAA,OAAO,EAAE,MAAMN,eAAe,CAACM,MAAD,CAFhC;AAGE,QAAA,EAAE,EAAE;AACFC,UAAAA,EAAE,EAAE,GADF;AAEFJ,UAAAA,EAAE,EAAE;AAFF,SAHN;AAAA,gCAQE,QAAC,cAAD;AAAA,iCACE,QAAC,MAAD;AAAQ,YAAA,GAAG,EAAEG,MAAM,CAACE,IAApB;AAA0B,YAAA,GAAG,EAAEF,MAAM,CAACG;AAAtC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBARF,eAWE,QAAC,YAAD;AACE,UAAA,OAAO,EAAEH,MAAM,CAACE,IADlB;AAEE,UAAA,sBAAsB,EAAE;AACtBE,YAAAA,MAAM,EAAE,IADc;AAEtBC,YAAAA,OAAO,EAAE;AAFa;AAF1B;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA,SACOL,MAAM,CAACM,EADd;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YALF,EA4BG,CAACX,OAAD,iBACC,QAAC,cAAD;AACE,MAAA,WAAW,EAAEH,KADf;AAEE,MAAA,EAAE,EAAE;AACFe,QAAAA,CAAC,EAAE,CADD;AAEFC,QAAAA,EAAE,EAAE,MAFF;AAGFC,QAAAA,KAAK,EAAG,mBAHN;AAIFC,QAAAA,OAAO,EAAE;AAJP;AAFN;AAAA;AAAA;AAAA;AAAA,YA7BJ;AAAA,kBADF;AA0CD","sourcesContent":["// @mui\nimport {\n  List,\n  Avatar,\n  Typography,\n  ListItemText,\n  ListItemAvatar,\n  ListItemButton,\n} from '@mui/material';\n// @types\nimport { Contact } from '../../../@types/chat';\n//\nimport SearchNotFound from '../../../components/SearchNotFound';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  query: string;\n  results: Contact[];\n  onSelectContact: (contact: Contact) => void;\n};\n\nexport default function ChatSearchResults({ query, results, onSelectContact }: Props) {\n  const isFound = results.length > 0;\n\n  return (\n    <>\n      <Typography paragraph variant=\"subtitle1\" sx={{ px: 3, color: 'text.secondary' }}>\n        Contacts\n      </Typography>\n\n      <List disablePadding>\n        {results.map((result) => (\n          <ListItemButton\n            key={result.id}\n            onClick={() => onSelectContact(result)}\n            sx={{\n              py: 1.5,\n              px: 3,\n            }}\n          >\n            <ListItemAvatar>\n              <Avatar alt={result.name} src={result.avatar} />\n            </ListItemAvatar>\n            <ListItemText\n              primary={result.name}\n              primaryTypographyProps={{\n                noWrap: true,\n                variant: 'subtitle2',\n              }}\n            />\n          </ListItemButton>\n        ))}\n      </List>\n      {!isFound && (\n        <SearchNotFound\n          searchQuery={query}\n          sx={{\n            p: 3,\n            mx: 'auto',\n            width: `calc(100% - 48px)`,\n            bgcolor: 'background.neutral',\n          }}\n        />\n      )}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}