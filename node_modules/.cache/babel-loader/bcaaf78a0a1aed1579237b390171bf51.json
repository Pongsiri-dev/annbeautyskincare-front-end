{"ast":null,"code":"var _jsxFileName = \"/Users/pongsiri.an/Downloads/Theme/Minimal_TypeScript_v2.7.0/full_version_TS/src/sections/map/change-theme/index.tsx\";\nimport ReactMapGL from 'react-map-gl';\nimport { useState, useCallback } from 'react';\n// components\nimport { MapControlScale, MapControlGeolocate, MapControlNavigation, MapControlFullscreen } from '../../../components/map'; //\n\nimport ControlPanel from './ControlPanel'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function MapChangeTheme(_ref) {\n  let {\n    themes,\n    ...other\n  } = _ref;\n  const [selectTheme, setSelectTheme] = useState('outdoors');\n  const [viewport, setViewport] = useState({\n    latitude: 37.785164,\n    longitude: -100,\n    zoom: 3.5,\n    bearing: 0,\n    pitch: 0\n  });\n  const handleChangeTheme = useCallback(value => setSelectTheme(value), []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ReactMapGL, { ...viewport,\n      onViewportChange: setViewport,\n      mapStyle: themes === null || themes === void 0 ? void 0 : themes[selectTheme],\n      ...other,\n      children: [/*#__PURE__*/_jsxDEV(MapControlScale, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MapControlNavigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MapControlFullscreen, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MapControlGeolocate, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ControlPanel, {\n      themes: themes,\n      selectTheme: selectTheme,\n      onChangeTheme: handleChangeTheme\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}","map":{"version":3,"sources":["/Users/pongsiri.an/Downloads/Theme/Minimal_TypeScript_v2.7.0/full_version_TS/src/sections/map/change-theme/index.tsx"],"names":["ReactMapGL","useState","useCallback","MapControlScale","MapControlGeolocate","MapControlNavigation","MapControlFullscreen","ControlPanel","MapChangeTheme","themes","other","selectTheme","setSelectTheme","viewport","setViewport","latitude","longitude","zoom","bearing","pitch","handleChangeTheme","value"],"mappings":";AAAA,OAAOA,UAAP,MAAuB,cAAvB;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,OAAtC;AAEA;AACA,SACEC,eADF,EAEEC,mBAFF,EAGEC,oBAHF,EAIEC,oBAJF,QAKO,yBALP,C,CAMA;;AACA,OAAOC,YAAP,MAAyB,gBAAzB,C,CAEA;;;;AAMA,eAAe,SAASC,cAAT,OAAmE;AAAA,MAA3C;AAAEC,IAAAA,MAAF;AAAU,OAAGC;AAAb,GAA2C;AAChF,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,UAAD,CAA9C;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC;AACvCc,IAAAA,QAAQ,EAAE,SAD6B;AAEvCC,IAAAA,SAAS,EAAE,CAAC,GAF2B;AAGvCC,IAAAA,IAAI,EAAE,GAHiC;AAIvCC,IAAAA,OAAO,EAAE,CAJ8B;AAKvCC,IAAAA,KAAK,EAAE;AALgC,GAAD,CAAxC;AAQA,QAAMC,iBAAiB,GAAGlB,WAAW,CAAEmB,KAAD,IAAmBT,cAAc,CAACS,KAAD,CAAlC,EAA2C,EAA3C,CAArC;AAEA,sBACE;AAAA,4BACE,QAAC,UAAD,OACMR,QADN;AAEE,MAAA,gBAAgB,EAAEC,WAFpB;AAGE,MAAA,QAAQ,EAAEL,MAAF,aAAEA,MAAF,uBAAEA,MAAM,CAAGE,WAAH,CAHlB;AAAA,SAIMD,KAJN;AAAA,8BAME,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,cANF,eAOE,QAAC,oBAAD;AAAA;AAAA;AAAA;AAAA,cAPF,eAQE,QAAC,oBAAD;AAAA;AAAA;AAAA;AAAA,cARF,eASE,QAAC,mBAAD;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAaE,QAAC,YAAD;AAAc,MAAA,MAAM,EAAED,MAAtB;AAA8B,MAAA,WAAW,EAAEE,WAA3C;AAAwD,MAAA,aAAa,EAAES;AAAvE;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA,kBADF;AAiBD","sourcesContent":["import ReactMapGL from 'react-map-gl';\nimport { useState, useCallback } from 'react';\nimport { InteractiveMapProps } from 'react-map-gl/src/components/interactive-map';\n// components\nimport {\n  MapControlScale,\n  MapControlGeolocate,\n  MapControlNavigation,\n  MapControlFullscreen\n} from '../../../components/map';\n//\nimport ControlPanel from './ControlPanel';\n\n// ----------------------------------------------------------------------\n\ninterface MapChangeThemeProps extends InteractiveMapProps {\n  themes: Record<string, string>;\n}\n\nexport default function MapChangeTheme({ themes, ...other }: MapChangeThemeProps) {\n  const [selectTheme, setSelectTheme] = useState('outdoors');\n  const [viewport, setViewport] = useState({\n    latitude: 37.785164,\n    longitude: -100,\n    zoom: 3.5,\n    bearing: 0,\n    pitch: 0\n  });\n\n  const handleChangeTheme = useCallback((value: string) => setSelectTheme(value), []);\n\n  return (\n    <>\n      <ReactMapGL\n        {...viewport}\n        onViewportChange={setViewport}\n        mapStyle={themes?.[selectTheme]}\n        {...other}\n      >\n        <MapControlScale />\n        <MapControlNavigation />\n        <MapControlFullscreen />\n        <MapControlGeolocate />\n      </ReactMapGL>\n\n      <ControlPanel themes={themes} selectTheme={selectTheme} onChangeTheme={handleChangeTheme} />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}