{"ast":null,"code":"var _jsxFileName = \"/Users/pongsiri.an/Downloads/Theme/Minimal_TypeScript_v2.7.0/full_version_TS/src/components/ThemeLocalization.tsx\";\n// @mui\nimport { ThemeProvider, createTheme, useTheme } from '@mui/material/styles'; // hooks\n\nimport useLocales from '../hooks/useLocales'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ThemeLocalization(_ref) {\n  let {\n    children\n  } = _ref;\n  const defaultTheme = useTheme();\n  const {\n    currentLang\n  } = useLocales();\n  const theme = createTheme(defaultTheme, currentLang.systemValue);\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 10\n  }, this);\n}","map":{"version":3,"sources":["/Users/pongsiri.an/Downloads/Theme/Minimal_TypeScript_v2.7.0/full_version_TS/src/components/ThemeLocalization.tsx"],"names":["ThemeProvider","createTheme","useTheme","useLocales","ThemeLocalization","children","defaultTheme","currentLang","theme","systemValue"],"mappings":";AACA;AACA,SAASA,aAAT,EAAwBC,WAAxB,EAAqCC,QAArC,QAAqD,sBAArD,C,CACA;;AACA,OAAOC,UAAP,MAAuB,qBAAvB,C,CAEA;;;AAMA,eAAe,SAASC,iBAAT,OAAgD;AAAA,MAArB;AAAEC,IAAAA;AAAF,GAAqB;AAC7D,QAAMC,YAAY,GAAGJ,QAAQ,EAA7B;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAkBJ,UAAU,EAAlC;AAEA,QAAMK,KAAK,GAAGP,WAAW,CAACK,YAAD,EAAeC,WAAW,CAACE,WAA3B,CAAzB;AAEA,sBAAO,QAAC,aAAD;AAAe,IAAA,KAAK,EAAED,KAAtB;AAAA,cAA8BH;AAA9B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD","sourcesContent":["import { ReactNode } from 'react';\n// @mui\nimport { ThemeProvider, createTheme, useTheme } from '@mui/material/styles';\n// hooks\nimport useLocales from '../hooks/useLocales';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  children: ReactNode;\n};\n\nexport default function ThemeLocalization({ children }: Props) {\n  const defaultTheme = useTheme();\n  const { currentLang } = useLocales();\n\n  const theme = createTheme(defaultTheme, currentLang.systemValue);\n\n  return <ThemeProvider theme={theme}>{children}</ThemeProvider>;\n}\n"]},"metadata":{},"sourceType":"module"}