{"ast":null,"code":"var _jsxFileName = \"/Users/pongsiri.an/Documents/GitHub/Valenta-front-end/src/sections/@dashboard/blog/BlogNewPostPreview.tsx\";\nimport { isString } from 'lodash'; // @mui\n\nimport { LoadingButton } from '@mui/lab';\nimport { alpha, styled } from '@mui/material/styles';\nimport { Box, Button, Container, Typography, DialogActions } from '@mui/material'; // @types\n\n// components\nimport Markdown from '../../../components/Markdown';\nimport Scrollbar from '../../../components/Scrollbar';\nimport EmptyContent from '../../../components/EmptyContent';\nimport { DialogAnimate } from '../../../components/animate'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HeroStyle = styled('div')(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    paddingTop: '56%',\n    position: 'relative',\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n    backgroundRepeat: 'no-repeat',\n    '&:before': {\n      top: 0,\n      content: \"''\",\n      width: '100%',\n      height: '100%',\n      position: 'absolute',\n      backgroundColor: alpha(theme.palette.grey[900], 0.72)\n    }\n  };\n}); // ----------------------------------------------------------------------\n\nexport default function BlogNewPostPreview(_ref2) {\n  var _values$cover;\n\n  let {\n    formik,\n    isOpenPreview,\n    onClosePreview\n  } = _ref2;\n  const {\n    values,\n    handleSubmit,\n    isSubmitting,\n    isValid\n  } = formik;\n  const {\n    title,\n    description,\n    content\n  } = values;\n  const cover = isString(values.cover) ? values.cover : (_values$cover = values.cover) === null || _values$cover === void 0 ? void 0 : _values$cover.preview;\n  const hasContent = title || description || content || cover;\n  const hasHero = title || cover;\n  return /*#__PURE__*/_jsxDEV(DialogAnimate, {\n    fullScreen: true,\n    open: isOpenPreview,\n    onClose: onClosePreview,\n    children: [/*#__PURE__*/_jsxDEV(DialogActions, {\n      sx: {\n        py: 2,\n        px: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        sx: {\n          flexGrow: 1\n        },\n        children: \"Preview Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClosePreview,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LoadingButton, {\n        type: \"submit\",\n        variant: \"contained\",\n        disabled: !isValid,\n        loading: isSubmitting,\n        onClick: () => handleSubmit(),\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), hasContent ? /*#__PURE__*/_jsxDEV(Scrollbar, {\n      children: [hasHero && /*#__PURE__*/_jsxDEV(PreviewHero, {\n        title: title,\n        cover: cover\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 5,\n            mb: 10\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            sx: {\n              mb: 5\n            },\n            children: description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Markdown, {\n            children: content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(EmptyContent, {\n      title: \"Empty content\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n} // ----------------------------------------------------------------------\n\n_c = BlogNewPostPreview;\n\nfunction PreviewHero(_ref3) {\n  let {\n    title,\n    cover\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(HeroStyle, {\n    sx: {\n      backgroundImage: `url(${cover})`\n    },\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      sx: {\n        top: 0,\n        left: 0,\n        right: 0,\n        margin: 'auto',\n        position: 'absolute',\n        pt: {\n          xs: 3,\n          lg: 10\n        },\n        color: 'common.white'\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h2\",\n        component: \"h1\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = PreviewHero;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"BlogNewPostPreview\");\n$RefreshReg$(_c2, \"PreviewHero\");","map":{"version":3,"sources":["/Users/pongsiri.an/Documents/GitHub/Valenta-front-end/src/sections/@dashboard/blog/BlogNewPostPreview.tsx"],"names":["isString","LoadingButton","alpha","styled","Box","Button","Container","Typography","DialogActions","Markdown","Scrollbar","EmptyContent","DialogAnimate","HeroStyle","theme","paddingTop","position","backgroundSize","backgroundPosition","backgroundRepeat","top","content","width","height","backgroundColor","palette","grey","BlogNewPostPreview","formik","isOpenPreview","onClosePreview","values","handleSubmit","isSubmitting","isValid","title","description","cover","preview","hasContent","hasHero","py","px","flexGrow","mt","mb","PreviewHero","backgroundImage","left","right","margin","pt","xs","lg","color"],"mappings":"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","sourcesContent":["import { isString } from 'lodash';\n// @mui\nimport { LoadingButton } from '@mui/lab';\nimport { alpha, styled } from '@mui/material/styles';\nimport { Box, Button, Container, Typography, DialogActions } from '@mui/material';\n// @types\nimport { NewPostViewFormikInstance } from '../../../@types/blog';\n// components\nimport Markdown from '../../../components/Markdown';\nimport Scrollbar from '../../../components/Scrollbar';\nimport EmptyContent from '../../../components/EmptyContent';\nimport { DialogAnimate } from '../../../components/animate';\n\n// ----------------------------------------------------------------------\n\nconst HeroStyle = styled('div')(({ theme }) => ({\n  paddingTop: '56%',\n  position: 'relative',\n  backgroundSize: 'cover',\n  backgroundPosition: 'center',\n  backgroundRepeat: 'no-repeat',\n  '&:before': {\n    top: 0,\n    content: \"''\",\n    width: '100%',\n    height: '100%',\n    position: 'absolute',\n    backgroundColor: alpha(theme.palette.grey[900], 0.72),\n  },\n}));\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  formik: NewPostViewFormikInstance;\n  isOpenPreview: boolean;\n  onClosePreview: VoidFunction;\n};\n\nexport default function BlogNewPostPreview({ formik, isOpenPreview, onClosePreview }: Props) {\n  const { values, handleSubmit, isSubmitting, isValid } = formik;\n  const { title, description, content } = values;\n  const cover = isString(values.cover) ? values.cover : values.cover?.preview;\n  const hasContent = title || description || content || cover;\n  const hasHero = title || cover;\n\n  return (\n    <DialogAnimate fullScreen open={isOpenPreview} onClose={onClosePreview}>\n      <DialogActions sx={{ py: 2, px: 3 }}>\n        <Typography variant=\"subtitle1\" sx={{ flexGrow: 1 }}>\n          Preview Post\n        </Typography>\n        <Button onClick={onClosePreview}>Cancel</Button>\n        <LoadingButton\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={!isValid}\n          loading={isSubmitting}\n          onClick={() => handleSubmit()}\n        >\n          Post\n        </LoadingButton>\n      </DialogActions>\n\n      {hasContent ? (\n        <Scrollbar>\n          {hasHero && <PreviewHero title={title} cover={cover} />}\n          <Container>\n            <Box sx={{ mt: 5, mb: 10 }}>\n              <Typography variant=\"h6\" sx={{ mb: 5 }}>\n                {description}\n              </Typography>\n              <Markdown children={content} />\n            </Box>\n          </Container>\n        </Scrollbar>\n      ) : (\n        <EmptyContent title=\"Empty content\" />\n      )}\n    </DialogAnimate>\n  );\n}\n\n// ----------------------------------------------------------------------\n\ntype PreviewHeroProps = {\n  title: string;\n  cover?: string | null;\n};\n\nfunction PreviewHero({ title, cover }: PreviewHeroProps) {\n  return (\n    <HeroStyle sx={{ backgroundImage: `url(${cover})` }}>\n      <Container\n        sx={{\n          top: 0,\n          left: 0,\n          right: 0,\n          margin: 'auto',\n          position: 'absolute',\n          pt: { xs: 3, lg: 10 },\n          color: 'common.white',\n        }}\n      >\n        <Typography variant=\"h2\" component=\"h1\">\n          {title}\n        </Typography>\n      </Container>\n    </HeroStyle>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}