{"ast":null,"code":"var _jsxFileName = \"/Users/pongsiri.an/Downloads/Theme/Minimal_TypeScript_v2.7.0/full_version_TS/src/sections/@dashboard/chat/ChatConversationItem.tsx\";\nimport { last } from 'lodash';\nimport { formatDistanceToNowStrict } from 'date-fns'; // @mui\n\nimport { styled } from '@mui/material/styles';\nimport { Box, Avatar, ListItemButton, ListItemText, ListItemAvatar } from '@mui/material'; // @types\n\n//\nimport BadgeStatus from '../../../components/BadgeStatus'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AVATAR_SIZE = 48;\nconst AVATAR_SIZE_GROUP = 32;\nconst RootStyle = styled(ListItemButton)(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    padding: theme.spacing(1.5, 3),\n    transition: theme.transitions.create('all')\n  };\n});\nconst AvatarWrapperStyle = styled('div')(_ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return {\n    position: 'relative',\n    width: AVATAR_SIZE,\n    height: AVATAR_SIZE,\n    '& .MuiAvatar-img': {\n      borderRadius: '50%'\n    },\n    '& .MuiAvatar-root': {\n      width: '100%',\n      height: '100%'\n    }\n  };\n}); // ----------------------------------------------------------------------\n\nexport default function ChatConversationItem(_ref3) {\n  var _last;\n\n  let {\n    isSelected,\n    conversation,\n    isOpenSidebar,\n    onSelectConversation\n  } = _ref3;\n  const details = getDetails(conversation, '8864c717-587d-472a-929a-8e5f298024da-0');\n  const displayLastActivity = ((_last = last(conversation.messages)) === null || _last === void 0 ? void 0 : _last.createdAt) || '';\n  const isGroup = details.otherParticipants.length > 1;\n  const isUnread = conversation.unreadCount > 0;\n  const isOnlineGroup = isGroup && details.otherParticipants.map(item => item.status).includes('online');\n  return /*#__PURE__*/_jsxDEV(RootStyle, {\n    onClick: onSelectConversation,\n    sx: { ...(isSelected && {\n        bgcolor: 'action.selected'\n      })\n    },\n    children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: { ...(isGroup && {\n            position: 'relative',\n            width: AVATAR_SIZE,\n            height: AVATAR_SIZE,\n            '& .avatarWrapper': {\n              position: 'absolute',\n              width: AVATAR_SIZE_GROUP,\n              height: AVATAR_SIZE_GROUP,\n              '&:nth-of-type(1)': {\n                left: 0,\n                zIndex: 9,\n                bottom: 2,\n                '& .MuiAvatar-root': {\n                  border: theme => `solid 2px ${theme.palette.background.paper}`\n                }\n              },\n              '&:nth-of-type(2)': {\n                top: 2,\n                right: 0\n              }\n            }\n          })\n        },\n        children: [details.otherParticipants.slice(0, 2).map(participant => /*#__PURE__*/_jsxDEV(AvatarWrapperStyle, {\n          className: \"avatarWrapper\",\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            alt: participant.name,\n            src: participant.avatar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this), !isGroup && (participant === null || participant === void 0 ? void 0 : participant.status) && /*#__PURE__*/_jsxDEV(BadgeStatus, {\n            status: participant.status,\n            sx: {\n              right: 2,\n              bottom: 2,\n              position: 'absolute'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }, this)]\n        }, participant.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)), isOnlineGroup && /*#__PURE__*/_jsxDEV(BadgeStatus, {\n          status: \"online\",\n          sx: {\n            right: 2,\n            bottom: 2,\n            position: 'absolute'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), isOpenSidebar && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n        primary: details.displayNames,\n        primaryTypographyProps: {\n          noWrap: true,\n          variant: 'subtitle2'\n        },\n        secondary: details.displayText,\n        secondaryTypographyProps: {\n          noWrap: true,\n          variant: isUnread ? 'subtitle2' : 'body2',\n          color: isUnread ? 'textPrimary' : 'textSecondary'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          ml: 2,\n          height: 44,\n          display: 'flex',\n          alignItems: 'flex-end',\n          flexDirection: 'column'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 1.25,\n            fontSize: 12,\n            lineHeight: '22px',\n            whiteSpace: 'nowrap',\n            color: 'text.disabled'\n          },\n          children: formatDistanceToNowStrict(new Date(displayLastActivity), {\n            addSuffix: false\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this), isUnread && /*#__PURE__*/_jsxDEV(BadgeStatus, {\n          status: \"unread\",\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n} // ----------------------------------------------------------------------\n\nconst getDetails = (conversation, currentUserId) => {\n  const otherParticipants = conversation.participants.filter(participant => participant.id !== currentUserId);\n  const displayNames = otherParticipants.map(participant => participant.name).join(', ');\n  let displayText = '';\n  const lastMessage = conversation.messages[conversation.messages.length - 1];\n\n  if (lastMessage) {\n    const sender = lastMessage.senderId === currentUserId ? 'You: ' : '';\n    const message = lastMessage.contentType === 'image' ? 'Sent a photo' : lastMessage.body;\n    displayText = `${sender}${message}`;\n  }\n\n  return {\n    otherParticipants,\n    displayNames,\n    displayText\n  };\n};","map":{"version":3,"sources":["/Users/pongsiri.an/Downloads/Theme/Minimal_TypeScript_v2.7.0/full_version_TS/src/sections/@dashboard/chat/ChatConversationItem.tsx"],"names":["last","formatDistanceToNowStrict","styled","Box","Avatar","ListItemButton","ListItemText","ListItemAvatar","BadgeStatus","AVATAR_SIZE","AVATAR_SIZE_GROUP","RootStyle","theme","padding","spacing","transition","transitions","create","AvatarWrapperStyle","position","width","height","borderRadius","ChatConversationItem","isSelected","conversation","isOpenSidebar","onSelectConversation","details","getDetails","displayLastActivity","messages","createdAt","isGroup","otherParticipants","length","isUnread","unreadCount","isOnlineGroup","map","item","status","includes","bgcolor","left","zIndex","bottom","border","palette","background","paper","top","right","slice","participant","name","avatar","id","displayNames","noWrap","variant","displayText","color","ml","display","alignItems","flexDirection","mb","fontSize","lineHeight","whiteSpace","Date","addSuffix","currentUserId","participants","filter","join","lastMessage","sender","senderId","message","contentType","body"],"mappings":"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","sourcesContent":["import { last } from 'lodash';\nimport { formatDistanceToNowStrict } from 'date-fns';\n// @mui\nimport { styled } from '@mui/material/styles';\nimport { Box, Avatar, ListItemButton, ListItemText, ListItemAvatar } from '@mui/material';\n// @types\nimport { Conversation } from '../../../@types/chat';\n//\nimport BadgeStatus from '../../../components/BadgeStatus';\n\n// ----------------------------------------------------------------------\n\nconst AVATAR_SIZE = 48;\nconst AVATAR_SIZE_GROUP = 32;\n\nconst RootStyle = styled(ListItemButton)(({ theme }) => ({\n  padding: theme.spacing(1.5, 3),\n  transition: theme.transitions.create('all'),\n}));\n\nconst AvatarWrapperStyle = styled('div')(({ theme }) => ({\n  position: 'relative',\n  width: AVATAR_SIZE,\n  height: AVATAR_SIZE,\n  '& .MuiAvatar-img': { borderRadius: '50%' },\n  '& .MuiAvatar-root': { width: '100%', height: '100%' },\n}));\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  isSelected: boolean;\n  conversation: Conversation;\n  isOpenSidebar: boolean;\n  onSelectConversation: VoidFunction;\n};\n\nexport default function ChatConversationItem({\n  isSelected,\n  conversation,\n  isOpenSidebar,\n  onSelectConversation,\n}: Props) {\n  const details = getDetails(conversation, '8864c717-587d-472a-929a-8e5f298024da-0');\n\n  const displayLastActivity = last(conversation.messages)?.createdAt || '';\n  const isGroup = details.otherParticipants.length > 1;\n  const isUnread = conversation.unreadCount > 0;\n  const isOnlineGroup =\n    isGroup && details.otherParticipants.map((item) => item.status).includes('online');\n\n  return (\n    <RootStyle\n      onClick={onSelectConversation}\n      sx={{\n        ...(isSelected && { bgcolor: 'action.selected' }),\n      }}\n    >\n      <ListItemAvatar>\n        <Box\n          sx={{\n            ...(isGroup && {\n              position: 'relative',\n              width: AVATAR_SIZE,\n              height: AVATAR_SIZE,\n              '& .avatarWrapper': {\n                position: 'absolute',\n                width: AVATAR_SIZE_GROUP,\n                height: AVATAR_SIZE_GROUP,\n                '&:nth-of-type(1)': {\n                  left: 0,\n                  zIndex: 9,\n                  bottom: 2,\n                  '& .MuiAvatar-root': {\n                    border: (theme) => `solid 2px ${theme.palette.background.paper}`,\n                  },\n                },\n                '&:nth-of-type(2)': { top: 2, right: 0 },\n              },\n            }),\n          }}\n        >\n          {details.otherParticipants.slice(0, 2).map((participant) => (\n            <AvatarWrapperStyle className=\"avatarWrapper\" key={participant.id}>\n              <Avatar alt={participant.name} src={participant.avatar} />\n              {!isGroup && participant?.status && (\n                <BadgeStatus\n                  status={participant.status}\n                  sx={{ right: 2, bottom: 2, position: 'absolute' }}\n                />\n              )}\n            </AvatarWrapperStyle>\n          ))}\n\n          {isOnlineGroup && (\n            <BadgeStatus status=\"online\" sx={{ right: 2, bottom: 2, position: 'absolute' }} />\n          )}\n        </Box>\n      </ListItemAvatar>\n\n      {isOpenSidebar && (\n        <>\n          <ListItemText\n            primary={details.displayNames}\n            primaryTypographyProps={{\n              noWrap: true,\n              variant: 'subtitle2',\n            }}\n            secondary={details.displayText}\n            secondaryTypographyProps={{\n              noWrap: true,\n              variant: isUnread ? 'subtitle2' : 'body2',\n              color: isUnread ? 'textPrimary' : 'textSecondary',\n            }}\n          />\n\n          <Box\n            sx={{\n              ml: 2,\n              height: 44,\n              display: 'flex',\n              alignItems: 'flex-end',\n              flexDirection: 'column',\n            }}\n          >\n            <Box\n              sx={{\n                mb: 1.25,\n                fontSize: 12,\n                lineHeight: '22px',\n                whiteSpace: 'nowrap',\n                color: 'text.disabled',\n              }}\n            >\n              {formatDistanceToNowStrict(new Date(displayLastActivity), {\n                addSuffix: false,\n              })}\n            </Box>\n            {isUnread && <BadgeStatus status=\"unread\" size=\"small\" />}\n          </Box>\n        </>\n      )}\n    </RootStyle>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nconst getDetails = (conversation: Conversation, currentUserId: string) => {\n  const otherParticipants = conversation.participants.filter(\n    (participant) => participant.id !== currentUserId\n  );\n  const displayNames = otherParticipants.map((participant) => participant.name).join(', ');\n\n  let displayText = '';\n  const lastMessage = conversation.messages[conversation.messages.length - 1];\n  if (lastMessage) {\n    const sender = lastMessage.senderId === currentUserId ? 'You: ' : '';\n    const message = lastMessage.contentType === 'image' ? 'Sent a photo' : lastMessage.body;\n    displayText = `${sender}${message}`;\n  }\n  return { otherParticipants, displayNames, displayText };\n};\n"]},"metadata":{},"sourceType":"module"}